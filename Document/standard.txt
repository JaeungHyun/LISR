

리눅스 셋업 표준화 (jsj / 2017-05-12 부터 작성, 계속 업데이트 중)

DELL | SUPERMICRO | 다산 GPU워크스테이션
Bios 설정 UEFI Secure boot --> off

이 문서 웹 링크 - https://docs.google.com/document/d/e/2PACX-1vRUrttywn2mqKnOhMz_D-AjMmpBsqafQ2lhQ1olYTJBXw2iQWotBlo9NqhFeWu4_uri5A1lKbLdQMXN/pub



=== 목차 ===

# 설치하면서  IP & hostname 수동설정 (CentOS & Ubuntu)	3
# 1. SSH 접속 / Root 전환	3
# 2. 기본 유틸 설치 / 시간 동기화	3
# 3. profile 설정 - Console Color , alias	5
# 4. 하드웨어 사양  /  기본 환경 확인 (os 버젼 등)	6
# 5. ip 및 hostname 정보 / 인터넷 연결 확인	7
# 10. grub 수정, ipv6 & (CentOS) SELINUX disable	7
# 11. grub 수정, nouveau disable (for Nvidia GPU)	8
# 12. Desktop (X window) Install, not default	9
# 13. 불필요한 Daemon Disable	11
# 15. epel repo add - CentOS7	12
# 16. 보안강화를 위한 SSH Port 변경, Root Login 거부, 방화벽 Port 설정	12
#  X11 Forwading	12
추가예정  // 16-1    보안 셋팅	14
# 17. ADD User & sudo 권한	14
# 18. 스토리지, 파티션, 마운트 / parted or lvm / UUID & LABEL	15
# 19. banner // login wellcome message	16
# 20. VNC Server 설정	16
# 21. TeamViewer 설치	17
차후 업데이트 후 적용 예정 // @@. 추가 package 설치	18
추가예정  // @@. bios, raid firmware upgrade	18
# 24. kernel / kernel-header / kernel-devel 버젼 일치 확인 (CentOS7)	19
# 25. 부팅 되는 커널 버젼 변경방법 (CentOS)	20
# 25. 부팅 되는 커널 버젼 변경방법 (Ubuntu16)	20
# 26. Windows 에서 접속 (putty)  /  X11 Forwading /  파일 송수신 (winscp)	21
# 27. 리눅스 기초 참고 사이트	22
# ====== 장애 모니터링 =======	22
# 31. Dell OpenManage Server Administrator Install (OMSA)	22
# 32. Dell RAID Controller Management (MSM) + Alert by Email	24
# (Centos) 33. Dell SupportAssist (Dell log Collect Program )	25
# (UPS 있는경우만) 34. apcupsd -- alert by Email AutoShutdown	26
# 35. SMTP for Email Alert (mailutils or mailx)	27
# 36. SMTP for Email Alert (postfix)	28
# 37. Gmail SMTP	29
# 38. Dell OMSA Alert by E-mail	31
# history 저장 (차후 설치기록 참고용)	35
# ======= GPU Setting ============	35
# 50. IPMI Tools - Adjust Fan Speed (for Dell GPU Server)	35
# 51. CentOS Nvidia Driver & CUDA, cuDNN lib  Install	35
# 51. Ubuntu NVIDIA Driver & CUDA, cuDNN lib  Install	37
# 53. Deep Learning Package Install (python , tensorflow)	40
# ======= 기타 //  선택사항 ============	42
@@. 부팅시 nvidia device 올리기 / rc.local   (nvidia-smi)	42
@@. 추가예정 - Cluster 병렬 shell & monitoring  (psh ,pdsh ,  ctop , htop )	43
@@. HPC Job Scheduler	43
@@. GPU Job Scheduler	43
문서 분리 // 60. Open HPC	43
문서 분리 (작성 예정..)  // 61. SGE Job Scheduler	43
@@. 구글 크롬 (chrome) 설치	43
@@ motd	44
@@ Dell racadm command  예시  입니다..	44
@@ Rsync Backup + E-mail Log	46
@@ ipmi tools - Change LCD Message /	49
Send mail - Temperature log	49
@@ ipmi - Temperature alert, shutdown	51
@@ Ramdisk + nfs share. (pxe , 클론질라를 통한 네트워크 배포시)	52
@@ iDRAC (IPMI) / Serial (COM2) - Redirect.	52
@@ tmux	52
제외 // @@. 한글 폰트 설치	52
@@ Dell Poweredge R740 / PERC H740, H840 / LSI RaidController Driver for Ubuntu 16.04	53
========  end.	53

=== 목차 끝



범례:	보라색 글자 ->  설명 (주석)
	빨간색 글자 ->  강조 / 유의 / 필요한 경우 수정 해야 하는 부분
검정색 글자 ->  입력 명령어  (드래그 하여 붙여 넣기)
파란색 글자 ->  작성하는 파일 내용

#
# 설치하면서  IP & hostname 수동설정 (CentOS & Ubuntu)
#
# OS 설치 시 IP를 수동으로 설정하고 hostname 을 지정 합니다.
# (hostname에 특정한 정보를 포함하는 것이 서버를 구분하는데 유리합니다.)
#
# Ubuntu 의 경우 자동으로 IP 세팅을 시도하는 화면에서
# Cancel 또는 ESC 를 누르면 수동으로 IP 설정을 할 수 있습니다.
#
# 1. SSH 접속 / Root 전환
#

ssh  user@192.168.0.xxx


# (Centos7) Root 전환
# sudo -i     # 로그인된 사용자 (sudo 권한이 있는) 의 암호를 이용해서 root 계정으로 전환
# 또는
# su -   # root 의 암호를 이용해서 root 계정으로 전환

# ==========================

# (Ubuntu) Root 전환 및 root 계정 활성화
# sudo -i  =  로그인된 사용자 (sudo 권한이 있는) 의 암호를 이용해서 root로 전환
sudo -i


# passwd root  =  root 에 대한 새로운 암호 설정
sudo passwd root


# (Ubuntu)  Root 계정으로의 전환 명령어
# sudo -i   또는   su -
# su - 명령의 경우 sudo passwd root 명령을 통해서 root 계정이 활성화 된 후  su - 명령 사용 가능.

# ==========================

# ** sudo -i 와 su - 의 차이점
# * sudo -i 는 sudo 권한이 있는 사용자가, 사용자의 암호를 사용해서 root 계정으로 전환 하는 것 입니다.
# * su -      는 sudo 권한과 관계 없이 root 의 암호를 사용해서 root 계정으로 전환 하는 것 입니다.
# 두 명령 모두 root 로 전환되어 작업이 진행 하는 것은 동일하며,
# su - 의 경우 뒤에 다른 사용자 명을 입력하여 재 접속 하지 않고
# 다른 사용자 계정으로 전환 할 수 있습니다.   ex ) su - testuser

#
# 2. 기본 유틸 설치 / 시간 동기화
#

# (Centos7) 우선 kernel 을 업데이트 하고 재부팅 한 후 진행 합니다.
yum -y  update  >>  dasan_log_yum_update.txt

tail dasan_log_yum_update.txt

reboot

# ========================

# (Centos7) 기본 유틸 설치
yum install -y  \
vim pciutils perl openssh mlocate nfs-utils rdate xauth firefox nautilus wget tcsh tree lshw tmux git kernel-headers kernel-devel ipmitool gcc make gcc-c++ cmake python-devel ntfs-3g   >> dasan_log_install_centos_default_util.txt

tail dasan_log_install_centos_default_util.txt


# 서버 시간동기화 (CentOS)


rdate  -s  time.bora.net
clock --systohc
date
hwclock



# ========================

# (Ubnutu 14,16) 기본 유틸 설치
# 빠른 설치를 위해 기본 저장소(repository) 를 ftp.daumkakao.com 으로 변경합니다.

tail /etc/apt/sources.list  |  grep -v "#"

perl -pi -e 's/kr.archive.ubuntu.com/ftp.daumkakao.com/g' /etc/apt/sources.list
perl -pi -e 's/security.ubuntu.com/ftp.daumkakao.com/g' /etc/apt/sources.list

tail /etc/apt/sources.list  |  grep -v "#"

# 변경된 저장소 (repository) 의 정보를 업데이트 한 후 진행 합니다. (재부팅 불 필요)
apt-get update    > dasan_log_ubuntu_repo_update.txt

tail -5 dasan_log_ubuntu_repo_update.txt




apt-get install -y  \
vim nfs-common rdate xauth firefox gcc make locate htop tmux git wget ipmitool xfsprogs ntfs-3g aptitude lvm2    > dasan_log_install_ubuntu_default_util.txt

# ======================

tail -5 dasan_log_install_ubuntu_default_util.txt



aptitude install -y python-dev     >> dasan_log_ubuntu_python-dev_install.txt

# ======================

tail -5 dasan_log_ubuntu_python-dev_install.txt

# 서버 시간동기화 (Ubuntu)

rdate  -s  time.bora.net
hwclock --systohc
date
hwclock

#
# 3. profile 설정 - Console Color , alias
#
# Console 의 가독성을 높이기 위하여 Prompt 색상을 변경하고,
# 사용 편의를 위한 alias를 설정 합니다.
# <색상표>


# CentOS7 & Ubuntu16 동일

echo " "  >> /etc/profile
echo "#add by dasandata"             >>   /etc/profile
echo "alias vi='vim' "                        >>   /etc/profile
echo "alias ls='ls --color=auto' "       >>   /etc/profile
echo "alias ll='ls -lh' "                        >>   /etc/profile
echo "alias grep='grep --color=auto' "   >>   /etc/profile
echo " "  >> /etc/profile
echo "# Add timestamp to .bash_history "  >> /etc/profile
echo 'export HISTTIMEFORMAT="%d/%m/%y %T "' >> /etc/profile
echo "#add end."                               >>   /etc/profile
echo " "  >> /etc/profile


tail -11 /etc/profile

source /etc/profile

# root 와 user 의 프롬프트 색상이 다르게 설정

echo "export PS1='\[\e[1;30;41m\][\u@\h:\W]\\$\[\e[m\] '" >> /root/.bashrc
tail -1 /root/.bashrc

echo "export PS1='\[\e[1;31;40m\][\u@\h:\W]\\$\[\e[m\] '" >> /home/user/.bashrc
tail -1 /home/user/.bashrc

# 재 로그인 하여 캡쳐





#
# 4. 하드웨어 사양  /  기본 환경 확인 (os 버젼 등)
#

# 하드웨어 사양 확인 (복사 또는 파일로 만들어서 실행)

vi  /root/dasan_check_to_hardware_spec.sh

# ==============================

#!/bin/bash
### 5. Check to Hardware Spec
PROMPT="[${USER}@${HOSTNAME%%.*} ${PWD/#$HOME/~}]#"
echo -e "\033[1;32m"### Start to Check Hardware Spec.... "\033[0m"
echo " "
echo -e  "\033[1;32m"=== System ==="\033[0m"
echo -e  "\033[1;34m${PROMPT} dmidecode --type system | grep -v \"^$\|#\|SMBIOS\|Handle\|Not\" \033[0m"
dmidecode --type system | grep -v "^$\|#\|SMBIOS\|Handle\|Not"
echo " "
echo -e  "\033[1;32m"=== CPU ==="\033[0m"
echo -e  "\033[1;34m${PROMPT} lscpu | grep -v \"Flags\|NUMA\"  \033[0m"
lscpu | grep -v "Flags\|NUMA"
echo " "
echo -e  "\033[1;34m${PROMPT} cat /proc/cpuinfo | head \033[0m"
cat /proc/cpuinfo | head
echo " "
echo -e  "\033[1;32m"=== Memory Device ==="\033[0m"
echo -e "\033[1;34m${PROMPT} dmidecode --type 16 | grep -v \"dmidecode\|SMBIOS\|Handle\" \033[0m"
dmidecode --type 16 | grep -v "dmidecode\|SMBIOS\|Handle"
echo " "
echo -e "\033[1;34m${PROMPT} dmidecode --type memory | grep \"Number Of Devices\|Size\|Locator\|Clock\|DDR\|Rank\" | grep -v \"No\|Unknown\"  \033[0m"
dmidecode --type memory | grep "Number Of Devices\|Size\|Locator\|Clock\|DDR\|Rank" | grep -v "No\|Unknown"
echo " "
echo -e "\033[1;34m${PROMPT} dmidecode --type memory  | grep Size | grep -v No | wc -l \033[0m"
dmidecode --type memory  | grep Size | grep -v No | wc -l
echo " "
echo -e "\033[1;34m${PROMPT} dmidecode --type memory  | grep Size | grep -v No | grep -c GB \033[0m"
dmidecode --type memory  | grep Size | grep -v No | grep -c GB
echo " "
echo -e "\033[1;34m${PROMPT} cat /proc/meminfo | grep MemTotal \033[0m"
cat /proc/meminfo | grep MemTotal
echo " "
echo -e "\033[1;34m"${PROMPT} free -m "\033[0m"
free -m
echo " "
echo -e "\033[1;34m"${PROMPT} free -h "\033[0m"
free -h
echo " "
echo -e  "\033[1;32m"=== Pci Device ==="\033[0m"
echo -e "\033[1;34m"${PROMPT} lspci \| grep -i vga "\033[0m"
lspci | grep -i vga
echo " "
echo -e "\033[1;34m"${PROMPT} lspci \| grep -i nvidia "\033[0m"
lspci | grep -i nvidia
echo " "
echo -e "\033[1;34m"${PROMPT} lspci \| grep -i raid "\033[0m"
lspci | grep -i raid
echo " "
echo -e "\033[1;34m"${PROMPT} dmidecode \| grep NIC "\033[0m"
dmidecode | grep NIC
echo " "
echo -e "\033[1;34m"${PROMPT} lspci \| grep -i communication "\033[0m"
lspci | grep -i communication
echo " "
echo -e "\033[1;34m"${PROMPT} dmesg \| grep NIC "\033[0m"
dmesg | grep NIC
echo " "
echo -e  "\033[1;32m"=== Power Supply ==="\033[0m"
echo -e "\033[1;34m"${PROMPT} dmidecode --type 39  \| grep \"System\|Name:\|Capacity\"  "\033[0m"
dmidecode --type 39  | grep "System\|Name:\|Capacity"
echo " "
echo -e  "\033[1;32m"=== Disk "&" Partition ==="\033[0m"
echo -e "\033[1;34m"${PROMPT} lsblk "\033[0m"
lsblk
echo " "
echo -e "\033[1;34m"${PROMPT} blkid "\033[0m"
blkid
echo " "
echo -e "\033[1;34m"${PROMPT} cat /etc/fstab \| grep -v \"#\|^$\" "\033[0m"
cat /etc/fstab | grep -v "#\|^$"
echo " "
echo -e "\033[1;34m"${PROMPT} df -hT \| grep -v tmpfs "\033[0m"
df -hT | grep -v tmpfs
echo " "
echo -e  "\033[1;32m"=== O/S ==="\033[0m"
echo -e "\033[1;34m"${PROMPT} cat /etc/*-release "\033[0m"
cat /etc/*-release
echo " "
echo -e "\033[1;34m"${PROMPT} uname -a "\033[0m"
uname -a
echo " "
echo -e  "\033[1;32m"=== END / 하드웨어 사양 확인 끝 ==="\033[0m"
echo " "

# End of file.

# ==================

cat /root/dasan_check_to_hardware_spec.sh

bash /root/dasan_check_to_hardware_spec.sh


#
# 5. ip 및 hostname 정보 / 인터넷 연결 확인
#

#CentOS7


ip a


cat /etc/sysconfig/network-scripts/ifcfg-em1


cat /etc/hostname


cat /etc/resolv.conf


ping -c 4 google.com


#Ubuntu16

ip a


cat /etc/network/interfaces

# =================

iface enp???? inet static
address 192.168.0.xxx
network 192.168.0.0
netmask 255.255.255.0
broadcast 192.168.0.255
gateway 192.168.0.1
dns-nameservers 168.126.63.1

# =================

cat /etc/resolv.conf
nameserver 168.126.63.1

ping -c 4 google.com



#
# 10. grub 수정, ipv6 & (CentOS) SELINUX disable
# 부팅시 화면에 부팅로그가 표시되도록 grub 를 수정하고,
# 불 필요한 ipv6를 사용하지 않게 하여 ip 정보 가독성을 높입니다.
#


#CentOS7 Grub 수정 및  ipdisable

ip a | grep inet6
# ipv6 값이 표시되고 있습니다.

cat /etc/default/grub
perl -pi -e  's/rhgb//'   /etc/default/grub
perl -pi -e  's/quiet//'  /etc/default/grub
perl -pi -e  's/GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="ipv6.disable=1 /' /etc/default/grub
cat /etc/default/grub

grub2-mkconfig -o /boot/grub2/grub.cfg

reboot   ## nouveau disable 까지 적용 하려면 11번 실행 후 리부팅 합니다.

# =================

ip a | grep inet6
# 아무 결과가 없는 것이  ipv6 disable 이 잘 적용 된것 입니다.

#CentOS7 SELINUX Disable

getenforce
setenforce 0
getenforce

sed -i 's/SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
cat /etc/sysconfig/selinux

# =================

#Ubnutu16 & 14  Grub 수정 및 ipv6 disable
ip a | grep inet6
# ipv6 값이 표시되고 있습니다.

cat /etc/default/grub | grep -v "#\|^$"

perl -pi -e 's/quiet//'    /etc/default/grub
perl -pi -e 's/splash//' /etc/default/grub
perl -pi -e  's/^GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="ipv6.disable=1 /'  /etc/default/grub
perl -pi -e  's/^GRUB_HIDDEN_TIMEOUT=/#GRUB_HIDDEN_TIMEOUT=/'  /etc/default/grub

cat /etc/default/grub | grep -v "#\|^$"

update-initramfs -u

update-grub2



# reboot  ## nouveau disable 까지 적용 하려면 11번 실행 후 리부팅 합니다.

# =================

# after reboot
ip a | grep inet6
# 아무 결과가 없어야  ipv6 disable 이 잘 적용 된것 입니다.



#
# 11. grub 수정, nouveau disable (for Nvidia GPU)
#
# nouveau (필요한 경우 - GPU Server, Nvidia Driver Install)

# CentOS7
lsmod | grep nouveau
# nouveau mod 가 동작하고 있습니다. - nvidia drvier 와 충돌되기 때문에 동작하지 않도록 설정 합니다.



perl -pi -e  's/GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="nomodeset /' /etc/default/grub
grep   GRUB_CMDLINE_LINUX=   /etc/default/grub

echo "blacklist nouveau" >> /etc/modprobe.d/blacklist.conf
echo "options nouveau modeset=0" >> /etc/modprobe.d/blacklist.conf

cat /etc/modprobe.d/blacklist.conf

dracut  -f

grub2-mkconfig  -o /boot/grub2/grub.cfg

reboot

# Ubuntu16
lsmod | grep nouveau
# nouveau mod 가 동작하고 있습니다. - nvidia drvier 와 충돌되기 때문에 동작하지 않도록 설정 합니다.


perl -pi -e  's/GRUB_CMDLINE_LINUX="/GRUB_CMDLINE_LINUX="nomodeset /' /etc/default/grub
grep GRUB_CMDLINE_LINUX= /etc/default/grub


echo "blacklist nouveau" >> /etc/modprobe.d/blacklist.conf
echo "options nouveau modeset=0" >> /etc/modprobe.d/blacklist.conf

tail /etc/modprobe.d/blacklist.conf


update-initramfs -u


update-grub2


reboot


# ==============================
# reboot 후 getenforce / lsmod | grep nouveau / ip a
# lsmod | grep nouveau 하여 아무것도 안나와야 정상

ip a | grep inet6
# 아무 결과가 없어야  ipv6 disable 이 잘 적용 된것 입니다.

lsmod | grep nouveau
# 아무 결과가 없어야  nouveau disable 이 잘 적용 된것 입니다.





#
# 12. Desktop (X window) Install, not default
# Desktop 환경을 설치 하지만, 기본 부팅은 텍스트 모드로 설정해 놓습니다.
# 필요한 경우에만 xwindow 를 실행하여 사용 합니다. (서버의 리소스 절약)
#


# CentOS7
# multi-user.target -> 텍스트환경
# graphical.target -> GUI 환경
# 기본 모드 변경시 -> systemctl set-default multi-user.target
systemctl get-default


# 설치
yum -y  groups install "GNOME Desktop"   >> dasan_log_install_gnome-desktop.txt

tail dasan_log_install_gnome-desktop.txt


# 콘솔에서 실행하여 윈도우가 잘 뜨는지 확인
#[user@hostname:~]# startx

# ==================

# Ubuntu16
# multi-user.target -> 텍스트환경
# graphical.target -> GUI 환경
# 기본 모드 변경시 -> systemctl set-default multi-user.target

systemctl get-default
systemctl set-default multi-user.target
systemctl get-default

apt-get -y install ubuntu-desktop  >> dasan_log_install_ubuntu-desktop.txt

# ==================

tail dasan_log_install_ubuntu-desktop.txt

# 콘솔에서 실행하여 윈도우가 잘 뜨는지 확인
#[user@hostname:~]# sudo systemctl start lightdm

# x-windows 종료하기
#[user@hostname:~]# sudo systemctl stop  lightdm

# ==================

# Ubuntu 14
perl -pi -e  's/GRUB_CMDLINE_LINUX_DEFAULT="/GRUB_CMDLINE_LINUX_DEFAULT="text /g'  /etc/default/grub
grep  "GRUB_CMDLINE_LINUX_DEFAULT="  /etc/default/grub

update-initramfs -u && update-grub2

apt-get -y install ubuntu-desktop  >> dasan_log_install_ubuntu-desktop.txt

tail dasan_log_install_ubuntu-desktop.txt

# 콘솔에서 실행하여 윈도우가 잘 뜨는지 확인
#[user@hostname:~]# sudo /etc/init.d/lightdm start

# x-windows 종료하기
#[user@hostname:~]# sudo /etc/init.d/lightdm stop


# 기본 부팅모드 (그래픽 모드 vs 텍스트 모드) 변경 방법 입니다. (런레벨 / runlevel)
# - CentOS 6.x 계열
# http://egloos.zum.com/conniezzang/v/3313282
# - CentOS 7.x 계열
# https://www.server-world.info/en/note?os=CentOS_7&p=runlevel


# ==================


# Desktop 을 설치하면 불필요한 데몬이 함께 깔립니다.
# 정리 필요...  (리소스 낭비, 시스템 속도 저하)


#
# 13. 불필요한 Daemon Disable
# 리소스 낭비를 줄이고, 시스템 속도를 높이기 위해
# 불 필요한 데몬들을 Disable 합니다.
#
# (중요) Ubuntu-Desktop 을 사용할 경우 NetworkManager 는 Disable 하지 않습니다.
#

# Centos 7 & Ubuntu 16
systemctl list-unit-files  -t service  | grep enable

vi dasan_daemon_disable.sh

# ==============

#!/bin/bash
# disable Daemon list
systemctl disable bluetooth.service
systemctl disable iscsi.service
systemctl disable ksm.service
systemctl disable ksmtuned.service
systemctl disable libstoragemgmt.service
systemctl disable libvirtd.service
systemctl disable NetworkManager.service
systemctl stop      NetworkManager.service
systemctl disable NetworkManager-dispatcher.service
systemctl disable NetworkManager-wait-online.service
systemctl disable spice-vdagentd.service
systemctl disable vmtoolsd.service
systemctl disable ModemManager.service

# End of file.

# ===============

cat dasan_daemon_disable.sh
bash dasan_daemon_disable.sh

# Ubuntu 14
# https://askubuntu.com/questions/19320/how-to-enable-or-disable-services

apt-get -y  install sysv-rc-conf
sysv-rc-conf

apt-get -y  install rcconf
rcconf

update-rc.d

ll /etc/init/network-manager.conf
mv /etc/init/network-manager.conf /etc/init/network-manager.conf.disable

#
# 15. epel repo add - CentOS7
#

yum repolist

yum -y  install epel-release   >    dasan_log_install_epel.txt

tail -5   dasan_log_install_epel.txt

sed -i -e "s/\]$/\]\npriority=5/g" /etc/yum.repos.d/epel.repo

yum -y  install yum-plugin-priorities    >>    dasan_log_install_epel.txt

tail -5   dasan_log_install_epel.txt

sed -i -e "s/\]$/\]\npriority=1/g" /etc/yum.repos.d/CentOS-Base.repo

yum repolist

rpm -qa | grep htop

yum -y  install htop  > dasan_log_install_htop.txt

tail -5  dasan_log_install_htop.txt



#
# 16. 보안강화를 위한 SSH Port 변경, Root Login 거부, 방화벽 Port 설정
#  X11 Forwading
# ssh port 를 7777로 변경하고, 방화벽을 설정한후, ssh를 통한 Root Login을 거부 합니다.
#


# CentOS7 Firewall

ip a

firewall-cmd --list-all
firewall-cmd --get-default-zone

firewall-cmd --change-interface=em1   --zone=external  --permanent
firewall-cmd --set-default-zone=external
firewall-cmd --reload

firewall-cmd --add-port=7777/tcp  --permanent
firewall-cmd --remove-service=ssh  --permanent
firewall-cmd --reload
firewall-cmd --list-all

# =================

# CentOS7 sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config
perl -pi -e "s/#Port 22/Port 7777/g" /etc/ssh/sshd_config
perl -pi -e "s/#PermitRootLogin yes/PermitRootLogin no/g" /etc/ssh/sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config

systemctl restart sshd


# Ubnutu16 Firewall
# If Ubuntu 14 - service ufw status
systemctl status ufw
ufw status
ufw enable

#  ===================

ufw default deny
ufw allow 7777/tcp
ufw status numbered

#  ===================

#Ubuntu17 sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config
perl -pi -e "s/#Port 22/Port 7777/g" /etc/ssh/sshd_config
perl -pi -e "s/PermitRootLogin prohibit-password/PermitRootLogin no/g" /etc/ssh/sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config


#Ubuntu16 sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config
perl -pi -e "s/Port 22/Port 7777/g" /etc/ssh/sshd_config
perl -pi -e "s/PermitRootLogin prohibit-password/PermitRootLogin no/g" /etc/ssh/sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config

# Ubuntu14 sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config
perl -pi -e "s/Port 22/Port 7777/g" /etc/ssh/sshd_config
perl -pi -e "s/PermitRootLogin without-password/PermitRootLogin no/g" /etc/ssh/sshd_config
grep 'Root\|Port' /etc/ssh/sshd_config


# =======================


# X11Forwarding 을 위해 AddressFamily inet 을 추가 합니다.
echo "AddressFamily inet" >> /etc/ssh/sshd_config
grep AddressFamily /etc/ssh/sshd_config
systemctl restart sshd

# 다시 접속하여 포트 변경 / root 로그인 거부 / X11Forwarding 을 테스트 합니다.
logout
logout

ssh user@192.168.0.?
ssh -p7777  user@192.168.0.?
logout

ssh -p7777  root@192.168.0.?
ssh -XYC -p 7777 user@192.168.0.?


xclock &

# 또는 아래...

firefox &
nautilus &


## ==KDS ==

I received the same warning as you after upgrading to Yosemite. After I added ForwardX11Trusted yes in my ~/.ssh/config file, the warning disappeared.
Do you have the following lines in your ~/.ssh/config file for enabling Trusted X11 forwarding?
Host APPROPRIATE_HOSTNAME
ForwardX11Trusted yes
ForwardX11 yes
OTHER_OPTIONS




추가예정  // 16-1    보안 셋팅

      ping 차단  ..
      ssl key 인증

#
# 17. ADD User & sudo 권한
# 새로운 사용자를 추가하고, sudo 권한을 부여 합니다.
#

#CentOS7
NEW_USER=dasan
echo $NEW_USER

adduser $NEW_USER
passwd $NEW_USER

# 새로운 사용자 계정으로 전환
su - $NEW_USER

# 관리자로 전환 되는지 확인
sudo -i
logout

# 관리자로 전환될 수 있도록 새 사용자를 wheel 그룹에 포함 시킵니다.
grep $NEW_USER /etc/group
usermod -G wheel $NEW_USER
grep $NEW_USER /etc/group

su - $NEW_USER
sudo -i
logout

# =================

#Ubuntu16
NEW_USER=dasan
echo $NEW_USER

adduser $NEW_USER

# 새로운 사용자 계정으로 전환
su - $NEW_USER

# 관리자로 전환 되는지 확인
sudo -i
logout

# 관리자로 전환될 수 있도록 새 사용자를 sudo 그룹에 포함 시킵니다.
grep $NEW_USER /etc/group
usermod -G sudo $NEW_USER
grep $NEW_USER /etc/group

su - $NEW_USER
sudo -i
logout

# ================

#
# 18. 스토리지, 파티션, 마운트 / parted or lvm / UUID & LABEL
#
# 홈 디렉토리를 용량이 큰 디스크 or 스토리지 로 변경
# 또는 용량이 큰 디스크를 /data 로 마운트
#


# =====  parted  ================
fdisk -l  |  grep 'Disk /dev'
lsblk

parted  -s /dev/sdb  "mklabel gpt"
parted -s /dev/sdb   "mkpart  primary    0% 100%"

mkfs.xfs -f -L DATA  /dev/sdb1
mount /dev/sdb1  /mnt

cd /home/
find .  | cpio -dump  /mnt

ls -l /mnt/
umount /mnt

echo  "LABEL="DATA"  /data  xfs  defaults  0 0 "  >> /etc/fstab
cat /etc/fstab | grep -v "#"
mount -a

df -hT | grep -v tmpfs
blkid
lsblk


# =====  LVM  ================


fdisk -l  |  grep 'Disk /dev'


lsblk

pvs
vgs
lvs


# ==================

pvcreate /dev/sdb

vgcreate vg1 /dev/sdb

lvcreate -l 100%FREE -n    lv1   vg1


lsblk
pvs
vgs
lvs

# =================

mkfs.xfs -L HOME  /dev/mapper/vg1-lv1

#mkdir /data

mount /dev/mapper/vg1-lv1 /mnt

cd /home/
find .  | cpio -dump  /mnt

ls -l /mnt/
umount /mnt


echo  "LABEL="HOME"  /home   xfs  defaults  0 0 "    >>   /etc/fstab

cat /etc/fstab | grep -v "#"

mount -a

df -hT | grep -v tmpfs

blkid

lsblk

cd

ls /home




#
# ====== disk label 변경
#
# mount는 UUID 또는 LABEL 로 하는 것 을 권장 합니다.
# /etc/fstab 수정.
# 아래 링크 참조
# http://greenfishblog.tistory.com/170
# http://tigerbum.tistory.com/31
#


#
# 19. banner // login wellcome message
# /etc/ssh/sshd_config 파일의 Banner 옵션을 조정하면
# 서버에 ssh 접속시 원하는 텍스트 이미지 를 표시할 수 있습니다.
# 텍스트 이미지 는 아래 사이트에서 쉽게 만들 수 있습니다.
# http://www.network-science.de/ascii/
#

vi /etc/ssh/banner.test
cat /etc/ssh/banner.test

grep Banner /etc/ssh/sshd_config
echo "Banner /etc/ssh/banner.test" >> /etc/ssh/sshd_config
grep Banner /etc/ssh/sshd_config

systemctl restart sshd

# 재접속 확인 (캡쳐)



#
# 20. VNC Server 설정
#
# 원격 접속을 위한 VNC Server를 구성 합니다.
# root가 아닌 사용자 계정으로 테스트 합니다.
# 참조 사이트 : https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-vnc-on-ubuntu-16-04
#


# CentOS7

rpm -qa | grep vnc


# vnc server(tigervnc-server) 와 vnc viewer 를 설치 합니다.
yum -y install   tigervnc-server   vnc   >> dasan_log_install_vnc.txt

tail dasan_log_install_vnc.txt




firewall-cmd --list-all | grep services


firewall-cmd --permanent --zone=external --add-service vnc-server
firewall-cmd --reload


# vnc 데몬 실행 확인.
firewall-cmd --list-all | grep services


# 설치된 vnc 정보 확인.
rpm -qa | grep vnc

# =================

# 일반 사용자 계정으로 테스트 합니다.
logout

# vnc접속용 암호를 지정합니다. (8자)
vncpasswd

# vnc 서버를 실행 합니다.
vncserver
# 현재 실행중인 vnc 서버 목록을 확인합니다.
vncserver -list

# 실행중인 vnc 서비스 끝내기
vncserver -kill :1

# 실행중인 vnc 프로세스 확인
ps aux | grep -i vnc

# 해상도와 색상을 지정하여 vnc 서비스 실행
vncserver -geometry 800x600 -depth 24

# vnc viewer 로 접속 테스트  (X11Forwading 이 구성 되어 있어야 합니다.)
vncviewer localhost:1 &


# ==============

# Ubuntu16
dpkg --list | grep vnc
sudo apt-get -y install xfce4 xfce4-goodies tightvncserver

# ==============

sudo ufw status
sudo ufw allow 5901/tcp
sudo ufw allow 5902/tcp

vncserver

# ==============

vncserver -kill :1

mv .vnc/xstartup .vnc/xstartup.bak
echo '#!/bin/bash  ' > .vnc/xstartup
echo 'xrdb $HOME/.Xresources  ' >> .vnc/xstartup
echo 'startxfce4 &  ' >> .vnc/xstartup
cat .vnc/xstartup
chmod +x .vnc/xstartup

vncserver


# vnc viewer 에서 접속  (접속주소 -> ipaddress:1)
# 캡쳐 및 첨부

#
# 21. TeamViewer 설치
# https://www.teamviewer.com/ko/download/linux/
#

# root 계정으로 전환한후 진행 합니다.
su -

# CentOS 7 설치

# epel 저장소가 설치 되어 있는지 확인.
yum install   epel-release
# teamviewer 설치에 필요한 라이브러리 설치.
yum -y install  qt5-*  >>  dasan_log_install_qt5(teamviewer).txt
tail   dasan_log_install_qt5(teamviewer).txt

# teamvierew 설치
yum -y  install   https://download.teamviewer.com/download/teamviewer.i686.rpm  >>   dasan_log_install_teamviewer.txt
tail  dasan_log_install_teamviewer.txt



# Ubuntu 16 설치

cd ~
pwd


wget  https://download.teamviewer.com/download/teamviewer_i386.deb


apt-get   -y install  ./teamviewer_i386.deb   >  dasan_log_install_teamviewer.txt

tail -5  dasan_log_install_teamviewer.txt


# CentOS & Ubuntu 공통

teamviewer daemon enable
teamviewer passwd 123456qwer!
teamviewer --daemon restart

# ====================

teamviewer info

# 여기서 ID 가 확인 되지  않으면
# X-Windows 로 들어가서 teamviewer 를 실행,
# 라이선스에 동의 한 후 확인 합니다.

# TeamViewer ID 를 확인 한 후 로그인 합니다. (캡쳐)




#
차후 업데이트 후 적용 예정 // @@. 추가 package 설치

# CentOS7
yum   -y    groupinstall  "Development Tools"
#yum  -y    groupinstall   " Development and Creative Workstation "
yum  -y    install automake xmlto asciidoc elfutils-libelf-devel zlib-devel binutils-devel newt-devel python-devel hmaccalc perl-ExtUtils-Embed rpm-build make gcc redhat-rpm-config patchutils git
yum -y    install xmlto asciidoc elfutils-libelf-devel zlib-devel binutils-devel newt-devel \
python-devel hmaccalc perl-ExtUtils-Embed bison elfutils-devel audit-libs-devel
yum -y     install --enablerepo=epel quilt libselinux-devel
yum -y     install net-tools bc pesign numactl-devel pciutils-devel ncurses-devel
yum -y     install    automake m4 autoconf
yum -y     install   python-devel redhat-rpm-config rpm-build tcl tk
yum -y     install    --enablerepo=epel     sg3_utils
yum -y install rdate wget mlocate ntpdate
yum -y install libselinux-devel
yum -y install libtool-*
yum install  -y   pciutils  gtk2  atk   cairo   libxml2-python  tcsh  libnl  lsof  numactl     python-docutils  tree

#Ubuntu16



추가예정  // @@. bios, raid firmware upgrade

#CentOS7



#Ubuntu16


#
# 24. kernel / kernel-header / kernel-devel 버젼 일치 확인 (CentOS7)
#

# 현재 실행중인 커널 버젼 확인
uname -r

# 실행중인 커널과 동일한 버젼의 커널 패키지 (header / devel) 이 설치 되어 있는지 확인.
rpm -qa | grep $(uname -r)

# ===== 아래내용은 참조만 ============

Cent Os 7.3  minimal 로  설치 하면  kernel  version 이  ..  아래와 같습니다.
3.10.0-514.el7.x86_64   ( 2016년 11월 기준)

uname  -a
Linux statgpu.snu.ac.kr 3.10.0-514.el7.x86_64 #1 SMP Tue Nov 22 16:42:41 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux

cat /etc/*release
CentOS Linux release 7.3.1611 (Core)
NAME="CentOS Linux"
VERSION="7 (Core)"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="7"
PRETTY_NAME="CentOS Linux 7 (Core)"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:7"
HOME_URL="https://www.centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"

CENTOS_MANTISBT_PROJECT="CentOS-7"
CENTOS_MANTISBT_PROJECT_VERSION="7"
REDHAT_SUPPORT_PRODUCT="centos"
REDHAT_SUPPORT_PRODUCT_VERSION="7"

CentOS Linux release 7.3.1611 (Core)
CentOS Linux release 7.3.1611 (Core)

yum update
reboot

rpm -qa | grep  kernel
kernel-tools-3.10.0-514.26.2.el7.x86_64
kernel-3.10.0-514.el7.x86_64
kernel-3.10.0-514.26.2.el7.x86_64
kernel-tools-libs-3.10.0-514.26.2.el7.x86_64


그렇지만  지금  OS   install    싯점   ( 2017-07  기준으로는   다릅니다..)

kernel                                          x86_64                         3.10.0-514.26.2.el7

그렇기  때문에 ..  yum  으로
yum  install kernel-devel
yum install kernel-header
를 하면   위 버전이 (3.10.0-514.26.2.el7)    설치 되면서   우리의 kernel   이 꼬입니다..    아주 아주 중요 합니다.

에를   들어 ….

위 OS  설치 한  후 …   mellanox  ofed  RH7.3  version  를  설치 ..  Nvidia   driver 를    설치   lustre  등을   하려면
위  두개의    src  가   필요 합니다.   이때  우리는
yum  install  kernel-devl    kernel-header 를  합니다.    이러면  이러면 꼬이기 시작합니다.


방법은
 cent os  7.3  media 에  있는   kernel-devel   kernel-header 를    찾아서 설치 하는  방법 .
centos  7.3   설치 할때부터  …      Development  를    설치 하는  방법이  있습니다.

이렇게 하면   위   package들이   option  없이  설치 됩니다.. ..  mellanox   luster   nvidia 모두   그렇습니다..

     3. 업데이트 방법 입니다..

Minimal os
yum  update   한후   설치 하는  방법입니다..
reboot

yum install  kernel-header   kernel-devel   하는  것입니다.

uname  -r
3.10.0-514.26.2.el7.x86_64
rpm -qa  | grep  kernel
kernel-3.10.0-514.26.2.el7.x86_64
abrt-addon-kerneloops-2.1.11-45.el7.centos.x86_64
kernel-headers-3.10.0-514.26.2.el7.x86_64
kernel-tools-libs-3.10.0-514.26.2.el7.x86_64
kernel-devel-3.10.0-514.26.2.el7.x86_64
kernel-tools-3.10.0-514.26.2.el7.x86_64
kernel-3.10.0-514.el7.x86_64

# 2017-07-10  기준
mellanox  와   lustre server  최신  rpm 은
kernel-3.10.0-514.26.2.el7.x86_64 을  지원 하지  않기 때문에
Mellanox  ofed 설치시   --add-suport-kerenl  옵션을  을 주어야 합니다.. .
그 다음  lustre  설치 햐여야 합니다..

#
# 25. 부팅 되는 기본 커널 버젼 변경방법 (CentOS)
#
# 업데이트를 통해 커널이 많이 설치 되었을 경우
# 이 방법으로 기본 부팅 커널 버젼을 변경할 수 있습니다.

# 설치된 커널 버젼 리스트 와 entry 값 확인.
awk -F\' '$1=="menuentry " {print i++ " : " $2}' /etc/grub2.cfg

0 : CentOS Linux (3.10.0-693.2.2.el7.x86_64) 7 (Core)
1 : CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)
2 : CentOS Linux (0-rescue-d74d3b32d1334341be074f22d2279937) 7 (Core)

# 현재 저장되어 있는 entry 값 확인 (숫자로 지정되어 있지 않음)
grub2-editenv list

# 기본값을 위에서 확인된 번호로 변경
grub2-set-default 1

# 변경된 값 확인
grub2-editenv list


# 다시 원래대로 변경.
grub2-set-default 0
grub2-editenv list



#
# 25. 부팅 되는 기본 커널 버젼 변경방법 (Ubuntu16)
#
# 업데이트를 통해 커널이 많이 설치 되었을 경우
# 이 방법으로 기본 부팅 커널 버젼을 변경할 수 있습니다.
# http://webnautes.tistory.com/512

awk -F\' '$1=="menuentry " {print i++ " : " $2}' /boot/grub/grub.cfg

0 : Ubuntu
1 : Memory test (memtest86+)
2 : Memory test (memtest86+, serial console 115200)
3 : Windows 10 (loader) (on /dev/sda1)

grep GRUB_DEFAULT /etc/default/grub

perl -pi -e 's/GRUB_DEFAULT=0/GRUB_DEFAULT=saved/' /etc/default/grub

grep GRUB_DEFAULT /etc/default/grub

update-grub

grub-set-default  0   # 또는 다른 번호

grub-editenv list




#
# 26. Windows 에서 접속 (putty)  /  X11 Forwading /  파일 송수신 (winscp)
#

# putty (x11 Forwarding Enable)
# https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html



# xming 설치
# https://sourceforge.net/projects/xming/

# 파일 전송 winscp
# https://winscp.net/eng/download.php


#
# 27. 리눅스 기초 참고 사이트
#
# Server-World
# https://www.server-world.info/en/note?os=Ubuntu_16.04&p=download
#
# OpenTutorials
# https://opentutorials.org/course/2598
#



#
# ====== 장애 모니터링 =======
#




#
# 30. SMTP for Email Alert (mailutils or mailx)
#
# 메일 알림을 받아볼 관리자 이메일 주소 및 로그 타이틀 정보를 선언하는 파일 생성
#

vi /root/dasan_export_global_variable.sh

# ===========================

#!/bin/bash
# Copyright by Dasandata.co.ltd
# http://www.dasandata.co.kr

ADMIN_LOG_EMAIL='logdasandata@googlegroups.com'  # 관리자 메일주소 입력 /  여려명일 경우 콤마(,) 로 구분
DASAN_CUSTOMER="AAAAA" # 고객사 정보를 기입 (회사명, 기관명 등..)

# 발송되는 이메일 제목의 뒷 부분에 기입되는 정보를 생성하는 부분 입니다.
DELL_SERVER_MODEL=$(dmidecode --type system | grep 'Product Name:' | cut -d ' ' -f 4)
DELL_SERVICE_TAG=$(dmidecode --type system  | grep 'Serial Number:' | cut -d ' ' -f 3)
TITLE_TAIL=$(hostname)'-'$DASAN_CUSTOMER'-'$DELL_SERVER_MODEL'-'$DELL_SERVICE_TAG
# file of end.

# =========================

# 작성된 전역변수 파일 정상 확인
cat /root/dasan_export_global_variable.sh
source /root/dasan_export_global_variable.sh
echo $TITLE_TAIL

# CentOS7 메일 설정 및 발송 테스트
yum -y  install mailx

grep inet_protocols   /etc/postfix/main.cf
perl -pi -e 's/inet_protocols = all/inet_protocols = ipv4/' /etc/postfix/main.cf
grep inet_protocols   /etc/postfix/main.cf

systemctl restart postfix

echo "Test of SMTP... OK." | mail -s $TITLE_TAIL $ADMIN_LOG_EMAIL

# ======================

# Ubuntu 16 메일 설정 및 발송 테스트
apt-get   -y   install mailutils

source /root/dasan_export_global_variable.sh
echo $TITLE_TAIL

echo "Test of SMTP... OK. " >  test_message.txt
cat test_message.txt
mail -s   $TITLE_TAIL   -t   $ADMIN_LOG_EMAIL   <   test_message.txt

# ======================

# Ubuntu 17 메일 설정 및 발송 테스트
apt-get   -y   install mailutils
source /root/dasan_export_global_variable.sh
echo $TITLE_TAIL

echo "Test of SMTP... OK. " >  test_message.txt
cat test_message.txt
echo "Test of SMTP... OK." | mail -s $TITLE_TAIL $ADMIN_LOG_EMAIL



# 메일 수신 예시 <이미지>


#
# 31. SMTP for Email Alert (postfix for Dell RAID Manager)
#
# Dell Server RAID Controller Management (MSM) 의 알림 메일 발송을 위해 postifx를 구성 합니다 .
#

# CentOS7

yum -y  install postfix
systemctl  status postfix | grep Active:
grep 'inet_interfaces =' /etc/postfix/main.cf


perl -pi -e "s/inet_interfaces = localhost/#inet_interfaces = localhost/" /etc/postfix/main.cf
perl -pi -e "s/#inet_interfaces = all/inet_interfaces = all/" /etc/postfix/main.cf
grep 'inet_interfaces =' /etc/postfix/main.cf

systemctl  restart postfix


# =====================


# Ubuntu16 check ( interface = all / protocols ipv4)

grep inet_interfaces /etc/postfix/main.cf
inet_interfaces = all

grep inet_protocols  /etc/postfix/main.cf
inet_protocols = all

perl -pi -e 's/^inet_protocols = all/inet_protocols = ipv4/'  /etc/postfix/main.cf

grep inet_protocols  /etc/postfix/main.cf
inet_protocols = ipv4


#
# 메일 발송에 문제가 있을 경우 ?
# /etc/postfix/main.cf 의 mynetworks 주석처리
# mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
#

grep 'mynetworks = '   /etc/postfix/main.cf


perl -pi -e 's/^mynetworks/#mynetworks/'   /etc/postfix/main.cf


grep  'mynetworks = '   /etc/postfix/main.cf


systemctl restart postfix


# ===================

# Ubuntu14

grep mynetworks /etc/postfix/main.cf
perl -pi -e 's/^mynetworks/#mynetworks/' /etc/postfix/main.cf
grep mynetworks /etc/postfix/main.cf

grep inet_protocols  /etc/postfix/main.cf
perl -pi -e "s/inet_protocols = all/inet_protocols = ipv4/" /etc/postfix/main.cf
grep inet_protocols  /etc/postfix/main.cf

/etc/init.d/postfix restart



#
# 32. Gmail SMTP
#
# 네트워크망 방화벽 때문에 외부로 메일이 발송되지 않을 경우
# gmail 서버를 사용해서 메일 발송 될 수 있도록 설정 합니다.
# 참조 사이트 http://webdir.tistory.com/171
# https://easyengine.io/tutorials/linux/ubuntu-postfix-gmail-smtp/
# 이메일을 발송에 사용할 gmail 계정은
# "안전하지 않은 앱이 계정에 액세스하도록 허용"  되도록  설정 되어 있어야 합니다.

# ===============================

# 1. /etc/postfix/main.cf 설정 추가

grep relayhost /etc/postfix/main.cf
perl -pi -e  's/^relayhost/#relayhost/'    /etc/postfix/main.cf
grep relayhost /etc/postfix/main.cf


EC1='
# For gmail smtp setting by dasandata
relayhost = [smtp.gmail.com]:587
smtp_use_tls = yes
smtp_sasl_auth_enable = yes
smtp_sasl_security_options = noanonymous
smtp_tls_CAfile = /etc/postfix/cacert.pem
smtp_sasl_password_maps = hash:/etc/postfix/gmail
# end gmail smtp setting
'


echo "${EC1}"
echo "${EC1}" >> /etc/postfix/main.cf

# =======================

# 추가 내용 확인
tail /etc/postfix/main.cf

# 2. /etc/postfix/gmail 파일 생성
echo   '[smtp.gmail.com]:587 dasansmtp@gmail.com:123456smtp!'  > /etc/postfix/gmail
cat   /etc/postfix/gmail

# 3.  /etc/postfix/gmail 파일 권한 변경
chmod 600 /etc/postfix/gmail

# 4. postmap을 통해 조회테이블 생성
postmap /etc/postfix/gmail

# ==================================

# 5. (CentOS7)  CA 인증서 생성
yum -y  install make

cd /etc/pki/tls/certs/ ||  mkdir -p /etc/pki/tls/certs
cd /etc/pki/tls/certs/ && make hostname.pem

## 아래와 같은 입력 커맨드가 뜨면 정보를 입력한다.
# 국가코드
Country Name (2 letter code) [GB]: kr
# 도이름
State or Province Name (full name) [Berkshire]: seoul
# 도시이름
Locality Name (eg, city) [Newbury]:
# 회사이름
Organization Name (eg, company) [My Company Ltd]: dasandata
# 부서명
Organizational Unit Name (eg, section) []: technical support
# 이름 또는 호스트이름
Common Name (eg, your name or your server’s hostname) []: dasandata.co.kr
# 이메일주소
Email Address []: dasandata@gmail.com

# ==================================

# 5. (Ubuntu16) CA 인증서 복사
cp /etc/ssl/certs/thawte_Primary_Root_CA.pem /etc/postfix/cacert.pem


# (Centos7 만) 6. 생성된 hostname.pem 파일 복사
cp /etc/pki/tls/certs/hostname.pem /etc/postfix/cacert.pem

# (Centos7 만 ) 7. SASL 관련 에러가 날 경우 설치 (예방차원에서 미리 설치)
yum -y  install cyrus-sasl-plain

# 8. (공통) 서비스 재시작
systemctl restart postfix

# ==================================


# 9. root 이메일 수신 alias
# 서버 내부에서 root 앞으로 발송되는 메일을 외부 메일로 받아볼 수 있습니다.

# (Centos7) 현재 설정 확인
grep root: /etc/aliases

# (Centos7) 기존 구성이 있을 경우 주석 처리
perl -pi -e 's/^root:/#root:/'  /etc/aliases
grep root: /etc/aliases

# (Centos7) 관리자 메일 주소 등록 (여러명일 경우 , 로 구분)
echo 'root:          logdasandata@googlegroups.com'  >> /etc/aliases
grep root: /etc/aliases

# ====================================

# Ubuntu16 은 root 이메일 수신 alias를 적용할 수 없음.
# alias를 적용해도 root@${hostname} 으로 발송 되어 dns 오류 발생

# ==========================

# (Centos7) 변경된 aliases 설정적용
newaliases

# ==========================

# (Centos7) 10. 이메일 발송 테스트
source /root/dasan_export_global_variable.sh
echo $TITLE_TAIL

# (Centos7)  변수에 설정된 관리자 메일로 발송
echo "Gmail SMTP Test... OK." | mail -s "Gmail SMTP Test From ${TITLE_TAIL}"  $ADMIN_LOG_EMAIL

# (Centos7) root 계정으로 발송 (aliases 가 잘 동작 되는지 확인)
echo "Gmail SMTP Test... OK." | mail -s "Gmail SMTP Test From ${TITLE_TAIL}"   root

# ================

# (Ubuntu16) 10. 이메일 발송 테스트
source /root/dasan_export_global_variable.sh
echo $TITLE_TAIL

echo "Test of GMAIL SMTP... OK. " >  test_message.txt
cat test_message.txt

# 변수에 설정된 관리자 메일로 발송
mail -s   $TITLE_TAIL   -t   $ADMIN_LOG_EMAIL   <   test_message.txt

# root 계정으로 발송 -> 안됨 ;;;
# mail -s   $TITLE_TAIL   -t   root    <   test_message.txt

# ================

# (Ubuntu17) 10. 이메일 발송 테스트
source /root/dasan_export_global_variable.sh
echo $TITLE_TAIL

# 변수에 설정된 관리자 메일로 발송
echo "Gmail SMTP Test... OK." | mail -s "Gmail SMTP Test From ${TITLE_TAIL}"  $ADMIN_LOG_EMAIL

# root 계정으로 발송 -> 안됨 ;;;
# mail -s   $TITLE_TAIL   -t   root    <   test_message.txt




#
# 33. Dell OpenManage Server Administrator Install (OMSA)
#
# 서버 자체에서 구동되며, 장애가 발생한 경우 상태를 확인하거나
# 오류 메세지를 메일로 발송 하는 기능을 구현 할 수 있습니다.
#

# (CentOS7) dell repository 등록
wget http://linux.dell.com/repo/hardware/dsu/bootstrap.cgi -O  ./dellomsainstall.sh
grep enabled   dellomsainstall.sh
sed -i -e "s/enabled=1/enabled=0/g" ./dellomsainstall.sh
grep enabled   dellomsainstall.sh

chmod +x ./dellomsainstall.sh
./dellomsainstall.sh   &&   rm -f ./dellomsainstall.sh

# (CentOS7) repository 등록 확인
yum repolist | tail -6
yum repolist --enablerepo=dell-system-update_dependent  | tail -6


# (CentOS7) OMSA (srvadmin) 설치
# yum -y   erase  tog-pegasus-libs
yum -y   install --enablerepo=dell-system-update_dependent -y   srvadmin-all   >>   dasan_log_install_dell_OMSA.txt
tail -5  dasan_log_install_dell_OMSA.txt

# =====================

# (Ubuntu16) dell repository 등록
# Ubuntu (17.10 = artful   //  16.04 = xenial   // 14.04 = trusty)  http://linux.dell.com/repo/community/ubuntu/
# Ubuntu17 은 아직 linux.dell.com/repo  에 등록되어 있지 않으므로 16.04 와 동일하게 진행 합니다. (xenial)

echo 'deb http://linux.dell.com/repo/community/ubuntu  xenial  openmanage'  | sudo tee -a  /etc/apt/sources.list.d/linux.dell.com.sources.list

or

echo 'deb http://linux.dell.com/repo/community/ubuntu xenial openmanage'  >  /etc/apt/sources.list.d/linux.dell.com.sources.list


gpg --keyserver pool.sks-keyservers.net --recv-key 1285491434D8786F
# ** 혹시 여기에서 오류가 발생하고 진행되지 않는 경우 nameserver 주소를 8.8.8.8 로 바꾸고 재시도 합니다.

gpg -a --export 1285491434D8786F |  sudo apt-key add -


# (Ubuntu) OMSA (srvadmin) 설치
apt-get  -y   update    >>   dasan_log_update_dell_repo.txt

tail dasan_log_update_dell_repo.txt

apt-get   -y  install srvadmin-all   >>   dasan_log_install_dell_OMSA.txt

tail dasan_log_install_dell_OMSA.txt

# ===========================



# (CentOS7) Firewall 설정 (OMSA Web Access Port - 1311 개방)
firewall-cmd   --list-all | grep ports
firewall-cmd   --add-port=1311/tcp  --zone=external   --permanent
firewall-cmd   --reload
firewall-cmd   --list-all | grep ports

# (Ubuntu16) Firewall 설정 (OMSA Web Access Port 개방)

ufw status numbered
ufw allow 1311/tcp  #1311 이 기본값 입니다.
ufw status numbered


# 잘 설치 되었는지 확인 (CentOS7, Ubuntu16 공통)
systemctl start dataeng
systemctl start dsm_om_connsvc

/opt/dell/srvadmin/sbin/racadm getsysinfo | grep "System Model\|Service Tag"
/opt/dell/srvadmin/sbin/omreport system alertlog | head

# 시스템이 시작될 때 관련 서비스가 실행 되도록 설정 (systemctl enable)
systemctl enable dataeng
systemctl enable dsm_om_connsvc



# 웹 모니터링
# Open to https://${server ip address}:1311

#
# 참조 omconfig  Manual
# http://topics-cdn.dell.com/pdf/dell-openmanage-server-administrator-v8.3_user%27s%20guide_en-us.pdf


???? ##centos7    javawa   install   ##
       yum install   icedtea-web

???? # Ubuntu 16.04       javawa   install   ##

sudo add-apt-repository ppa:maarten-fonville/ppa
sudo apt-get update
sudo apt-get install icedtea-8-plugin





#
# 34. Dell RAID Controller Management (MSM) + Alert by Email
# RAID 컨트롤러 관리 프로그램을 통해 서버의 전원을 끄지 않고 디스크 장애를 처리하거나
# RAID 구성을 변경할 수 있습니다. Megaraid Storage Manager 의 약자로 통상 MSM 이라고 합니다.
# LSI 사에서 최초 제작한 컨트롤러 였으나 현재는 Boradcom 제품 입니다.
# ** LSI MegaRAID
# LSI -> Avago Technologies 에 인수  (2013년 12월 16일)
# Avago Technologies 와 Broadcom 합병 (2015년 5월 28일)
# https://en.wikipedia.org/wiki/Broadcom_Limited

mkdir /root/raid_manager
cd /root/raid_manager
wget https://docs.broadcom.com/docs-and-downloads/raid-controllers/raid-controllers-common-files/17.05.00.02_Linux-64_MSM.gz

# 혹시 위 링크로 다운로드 되지 않으면 아래 웹페이지에서 직접 다운로드 합니다..
# https://www.broadcom.com/support/download-search/?pg=Storage+Adapters,+Controllers,+and+ICs&pf=RAID+Controller+Cards&pn=MegaRAID+SAS+9286CV-8e&po=&pa=&dk=


tar xvzf 17.05.00.02_Linux-64_MSM.gz
cd disk/

# CentOS7 (아래 명령 시행하면 기존 출력이 모두 지워짐)
./install.csh


# Ubuntu16, 14

apt-get  -y  install alien sysv-rc-conf    >> dasan_log_install_alien.txt


# ==========================


alien --scripts *.rpm
dpkg --install lib-utils2_1.00-9_all.deb
dpkg --install megaraid-storage-manager_17.05.00-3_all.deb


sysv-rc-conf --level 12345 vivaldiframeworkd  on
sysv-rc-conf --list | grep vivaldiframe
#    vivaldiframe 1:on	2:on	3:on	4:on	5:on


systemctl start vivaldiframeworkd


# 실행 / 일반 사용자 계정으로 전환 한 후 실행해야 x11Forwading 이 동작 합니다.

logout
/usr/local/MegaRAID\ Storage\ Manager/startupui.sh   &

# Configure Alerts -> Change Individual Events ->
# 228 Temperature sensor    =>> Disable
# 236 Drive is not certified   ==>> Disable


# =========================
# 여기 이하내용은 참조용 입니다.
# =========================

echo  ##  MSM  Mail  servive Config  ##
/usr/local/MegaRAID\ Storage\ Manager/startupui.sh   &
Login  root // passwd
Configure  Alerts  =>  Save  Backup

############

vi storage_manager_ui_start.sh
/usr/local/MegaRAID\ Storage\ Manager/startupui.sh &

chmod 744 ./storage_manager_ui_start.sh
./storage_manager_ui_start.sh

###  Editing  xml file ##

cat monitorconfig.xml   | more

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<monitor-config>
<actions>
<popup/>

<email>
<nic>192.168.0.231</nic>
<email-target>logdasandatat@googlegroups.com</email-target>
<port>25</port>
<servername>localhost</servername>
<password/>
<sender>disk-issue@localhost</sender>
<authentication-type>none</authentication-type>
<username/>
</email>

############################33

echo  ##  reference  (MSM Remove) ##

rpm -e  --noscripts  sas_ir_snmp.i386
rpm -qa | grep sas
rpm -e  --noscripts   sas_snmp-16.11-0003.i386





#
# 35. Dell OMSA Alert by E-mail
#

# 파일 생성 1 - 전역 변수 설정 (앞서 생성했다면 생략)
# vi /root/dasan_export_global_variable.sh

cat   /root/dasan_export_global_variable.sh

# ==========================

#!/bin/bash
# Copyright by Dasandata.co.ltd
# http://www.dasandata.co.kr

ADMIN_LOG_EMAIL='logdasandata@googlegroups.com'  # 관리자 메일주소 입력 /  여려명일 경우 콤마(,) 로 구분
DASAN_CUSTOMER="DASANDATA" # 고객사 정보를 기입 (회사명, 기관명 등..)

# 발송되는 이메일 제목의 뒷 부분에 기입되는 정보를 생성하는 부분 입니다.
DELL_SERVER_MODEL=$(dmidecode --type system | grep 'Product Name:' | cut -d ' ' -f 4)
DELL_SERVICE_TAG=$(dmidecode --type system  | grep 'Serial Number:' | cut -d ' ' -f 3)
TITLE_TAIL=$(hostname)'-'$DASAN_CUSTOMER'-'$DELL_SERVER_MODEL'-'$DELL_SERVICE_TAG
# file of end.

# ============================

# 파일 생성 2 - 경고메시지 수집 및 메일 발송

vi /root/dasan_alert_omsa.sh

# ====================

#!/bin/bash
# Copyright by Dasandata.co.ltd
# http://www.dasandata.co.kr

# export_global_variable
source /root/dasan_export_global_variable.sh

# Email Title
TITLE='Dell_OMSA_Alert_by_'$TITLE_TAIL

# Set Variable
OMSA_REPORT='./OMSA_REPORT.log'
OMSA_EMAIL_LOG='./OMSA_EMAIL.log'
OMREPORT_EXEC='/opt/dell/srvadmin/bin/omreport'

# Set Check Level
#OMSA_CHECK_LEVEL='Fatal, Critical, Fail..??'
OMSA_CHECK_LEVEL='Critical'

# Echo Message Head
echo  "
##################################################
# This Message from ${TITLE_TAIL}
# Using Dell Opne Mangement Server Administrator
# The location of the configuration file is below.
# /root/dasan_export_global_variable.sh
# /root/dasan_alert_omsa.sh
# $(date +%Y"-"%m"-"%d" "%r)
################################################## " >> ${OMSA_EMAIL_LOG}

# Extract report
${OMREPORT_EXEC} system alertlog | head -500 > ${OMSA_REPORT}

# check XML Transformation failed
# 추가예정 입니다...;;

# Define Report of OMSA_CHECK_LEVEL
# Include 'non-Critical'
MAX_LINE=$(grep 'Severity' ${OMSA_REPORT} | grep ${OMSA_CHECK_LEVEL} | wc -l)
LINE_NUM=($(cat -n ${OMSA_REPORT} | grep 'Severity' | grep ${OMSA_CHECK_LEVEL} | cut -f 1) )
LINE_SEL=0
# If want except to 'non-Critical'
#MAX_LINE=$(grep Severity ${OMSA_REPORT} | grep ${OMSA_CHECK_LEVEL} | grep -v Non-Critical | wc -l)
#LINE_NUM=($(cat -n ${OMSA_REPORT} | grep Severity | grep ${OMSA_CHECK_LEVEL} | grep -v Non-Critical | cut -f 1))
#LINE_SEL=0

# Echo Message Body
while [ ${MAX_LINE} -ne 0 ]
        do

        AAA=${LINE_NUM[${LINE_SEL}]}
        BBB=$(( ${AAA} + 20))
        CCC='./OMSA_TMP_DATA'

        sed -n ${AAA},${BBB}p ${OMSA_REPORT} > ${CCC}
        ENDL=$(cat ${CCC} | grep -n '^$'| head -1 | cut -d ":" -f 1)

        sed -n 1,${ENDL}p ${CCC} >> ${OMSA_EMAIL_LOG}
        echo "==================================== " >> ${OMSA_EMAIL_LOG}

        rm ${CCC}
        LINE_SEL=$(( ${LINE_SEL} + 1 ))
        MAX_LINE=$(( ${MAX_LINE} - 1 ))
done

# os 종류에 맞추어 주석을 해제 합니다.
# Centos 7.x - Send to Email
#cat ${OMSA_EMAIL_LOG} | /usr/bin/mail -s $TITLE $ADMIN_LOG_EMAIL

# Ubuntu 16 - Send to Email
#/usr/bin/mail -s $TITLE -t $ADMIN_LOG_EMAIL < ${OMSA_EMAIL_LOG}

# Ubuntu 17 - Send to Email
#cat ${OMSA_EMAIL_LOG} | /usr/bin/mail -s $TITLE $ADMIN_LOG_EMAIL


# Remove Log File
rm ${OMSA_REPORT}
rm ${OMSA_EMAIL_LOG}

# End of file.

# =========================

# 파일 실행권한 (중요!)
chmod 744 /root/dasan_alert_omsa.sh

# omconfig 설정용 실행파일 작성 (실행 파일 위치의 경로에 유의 합니다.)
vi dasan_omconfig_set.sh


# ================

#!/bin/bash
OMALERT='/opt/dell/srvadmin/bin/omconfig system alertaction'
EXECAPPATH=/root/dasan_alert_omsa.sh

$OMALERT event=intrusion                    execappath=$EXECAPPATH
$OMALERT event=systempeakpower    execappath=$EXECAPPATH
$OMALERT event=watchdogasr             execappath=$EXECAPPATH

$OMALERT event=tempfail         execappath=$EXECAPPATH
$OMALERT event=tempwarn      execappath=$EXECAPPATH

$OMALERT event=fanfail            execappath=$EXECAPPATH
$OMALERT event=fanwarn         execappath=$EXECAPPATH

$OMALERT event=batteryfail       execappath=$EXECAPPATH
$OMALERT event=batterywarn    execappath=$EXECAPPATH

$OMALERT event=processorfail       execappath=$EXECAPPATH
$OMALERT event=processorwarn    execappath=$EXECAPPATH
$OMALERT event=memprefail          execappath=$EXECAPPATH
$OMALERT event=memfail               execappath=$EXECAPPATH

$OMALERT event=powersupply             execappath=$EXECAPPATH
$OMALERT event=powersupplywarn     execappath=$EXECAPPATH
$OMALERT event=systempowerfail       execappath=$EXECAPPATH
$OMALERT event=systempowerwarn    execappath=$EXECAPPATH
$OMALERT event=voltfail                       execappath=$EXECAPPATH
$OMALERT event=voltwarn                    execappath=$EXECAPPATH

$OMALERT event=storagesysfail                    execappath=$EXECAPPATH
$OMALERT event=storagectrlfail                     execappath=$EXECAPPATH
$OMALERT event=storagesyswarn           execappath=$EXECAPPATH
$OMALERT event=storagectrlwarn                 execappath=$EXECAPPATH
$OMALERT event=storagectrlbatterywarn       execappath=$EXECAPPATH
$OMALERT event=storagectrlbatteryfail          execappath=$EXECAPPATH

$OMALERT event=pdiskwarn              execappath=$EXECAPPATH
$OMALERT event=pdiskfail                 execappath=$EXECAPPATH
$OMALERT event=vdiskwarn              execappath=$EXECAPPATH
$OMALERT event=vdiskfail                 execappath=$EXECAPPATH
$OMALERT event=enclosurewarn      execappath=$EXECAPPATH
$OMALERT event=enclosurefail          execappath=$EXECAPPATH

$OMALERT event=redundegrad      execappath=$EXECAPPATH
$OMALERT event=redunlost            execappath=$EXECAPPATH

$OMALERT event=hardwarelogwarn     execappath=$EXECAPPATH
$OMALERT event=hardwarelogfull        execappath=$EXECAPPATH

$OMALERT event=removableflashmediapresent      execappath=$EXECAPPATH
$OMALERT event=removableflashmediaremoved    execappath=$EXECAPPATH
$OMALERT event=removableflashmediafail              execappath=$EXECAPPATH

# END of File.

# ======================

# 명령 실행
cat  ./dasan_omconfig_set.sh


bash ./dasan_omconfig_set.sh



#
# 테스트 - 파워케이블 빼기  or  케이스 오픈 후 이메일이 도착 되는지 확인
#
# 수신된 이메일 예시 <이미지>

#
# 참조 omconfig  Manual
# http://topics-cdn.dell.com/pdf/dell-openmanage-server-administrator-v8.3_user%27s%20guide_en-us.pdf




#
# (Centos) 36. Dell SupportAssist (Dell log Collect Program )
# 장애 발생시 빠르고 정확한 진단 및 지원을 받을 수 있도록
# 기술지원팀에 서버의 현재 상태 로그를 전송하는 소프트웨어 입니다.
# Debia, Ubuntu 계열은 지원되지 않습니다.
# http://www.dell.com/support/article/us/en/19/SLN299049/supportassist%EB%8A%94-%EB%AC%B4%EC%97%87%EC%9D%B4%EB%A9%B0--sa%EA%B0%80-%EC%9E%A5%EC%B0%A9%EB%90%9C-poweredge-%EC%84%9C%EB%B2%84%EB%A5%BC-%EA%B4%80%EB%A6%AC%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9E%85%EB%8B%88%EA%B9%8C-?lang=KO
#


wget https://downloads.dell.com/FOLDER04390629M/1/SupportAssistEnterprise_1.1.0.133.bin

chmod +x SupportAssistEnterprise_1.1.0.133.bin
./SupportAssistEnterprise_1.1.0.133.bin

# 웹브라우져가 자동실행 되며, root / passwd를 입력하여 로그인 합니다.
# Dell SupportAssist 등록 마법사가 실행 됩니다. -> skip 해도 됩니다.

# 이후 실행할 때는 웹브라우져로 아래 페이지를 열고 root 계정으로 로그인 합니다. (주소 전체 기입)
# 로컬에서 열때  =>   http://localhost:9099/SupportAssist
# 원격지에서 열때  / 방화벽 설정 필요 =>  https://{IP address of server}:5700/SupportAssist

[root@hostname:~]# firewall-cmd   --list-all | grep port
[root@hostname:~]# firewall-cmd   --add-port=5700/tcp  --zone=external   --permanent
[root@hostname:~]# firewall-cmd   --reload
[root@hostname:~]# firewall-cmd   --list-all  | grep port

# colletion file    save   ⇒>



#
# (UPS 있는경우만) 37. apcupsd -- alert by Email AutoShutdown
#

### Apc UPS  Service on the  USB Cable    ###

yum -y  install apcupsd  > dasan_log_install_apcupsd.txt
tail -5 dasan_log_install_apcupsd.txt

echo  ### EDIT  ###

vi /etc/apcupsd/apccontrol
grep -n SYSADMIN /etc/apcupsd/apccontrol

### SYSADMIN   insert  to  admin Email  Address

28 #export SYSADMIN=root
29 export SYSADMIN='logdasandata@googlegroups.com'

vi /etc/apcupsd/apcupsd.conf

grep -n \
"UPSCABLE\|UPSTYPE\|SCRIPTDIR\|ONBATTERYDELAY\|BATTERYLEVEL\|MINUTES\|TIMEOUT\|BATTDATE"  \
/etc/apcupsd/apcupsd.conf | grep -v "#"

20  UPSNAME DASAN-UPS
34  UPSCABLE usb
91  UPSTYPE usb
112 SCRIPTDIR /etc/apcupsd
140 ONBATTERYDELAY 10
150 BATTERYLEVEL 10
155 MINUTES 10
169 TIMEOUT 0
288 BATTDATE 04/26/17

systemctl enable apcupsd
systemctl start apcupsd

## APC  UPS  config  ref Site:
# https://docs.google.com/document/d/1GIQOwqHXrMnTmX40fByYYNVX2u3s5H8PR1nfhAhWThU/pub
#







#
# history 저장 (차후 설치기록 참고용)
#

# 로그아웃 한 다음 다시 로그인 하여 작업

tail /root/.bash_history
cp /root/.bash_history    /root/dasan_install_history.txt



#
# ======= GPU Setting ============
#
# GPU 셋업 참조링크#1 - CentOS7-tensorflow-install-KDS-rev1.0
#


#
# 50. IPMI Tools - Adjust Fan Speed (for Dell GPU Server)
# ================================================
# Dell 서버에 Third-Party PCIe Card 를 장착할 경우 온도 모니터링이 되지 않아
# 서버의 Fan Speed 모드가 Turbo (Jets) 로 자동 설정 되어 상당한 소음이 발생합니다.
# ipmitool 명령어를 통해 기능을 제어하여 소음을 줄일 수 있습니다.
# Disabling a Third-Party PCIe Card Cooling Response with Dell PowerEdge Servers . pdf
# http://en.community.dell.com/cfs-file/__key/telligent-evolution-components-attachments/13-4491-00-00-20-44-15-33/Third-Party-PCIe-Card-Cooling-Response-Disable-Command-_2D00_-updated-Nov-2015.pdf?forcedownload=true

# Check Fan Speed
ipmitool sdr type Fan


# check status command.
ipmitool raw 0x30 0xce 0x01 0x16 0x05 0x00 0x00 0x00


# Jets on  status - 16 05 00 00 00 05 00 00 00 00
# Jets off  status - 16 05 00 00 00 05 00 01 00 00


# Jets on or Set Third-Party PCIe Card Default Cooling Response Logic To Enable
#ipmitool raw 0x30 0xce 0x00 0x16 0x05 0x00 0x00 0x00 0x05 0x00 0x00 0x00 0x00


# Jets off or Set Third-Party PCIe Card Default Cooling Response Logic To Disable
ipmitool raw 0x30 0xce 0x00 0x16 0x05 0x00 0x00 0x00 0x05 0x00 0x01 0x00 0x00


# Jets off 명령어 실행 후 30초 정도 기다렸다가 Fan Speed를 확인 합니다.
sleep 30

# Check Fan Speed
ipmitool sdr type Fan


# Check Sensor Temperature
ipmitool sdr type Temperature



# ================================================

#
# 51. CentOS Nvidia Driver & CUDA, cuDNN lib  Install
#


##  NVIDIA Driver ##
systemctl  get-default
systemctl set-default  multi-user.target

lsmod  | grep  nouveau
lsmod  | grep mga

echo  " blacklist nouveau "   >> /etc/modprobe.d/blacklist.conf
echo  "options nouveau modeset=0"   >> /etc/modprobe.d/blacklist.conf

dracut  -f
grub2-mkconfig  -o /boot/grub2/grub.cfg

##  REBOOT ##

##  Driver   ##
#2017-08-21 Link
wget http://us.download.nvidia.com/XFree86/Linux-x86_64/384.59/NVIDIA-Linux-x86_64-384.59.run

chmod  700  NVIDIA-Linux-x86_64-384.59.run

./NVIDIA-Linux-x86_64-384.59.run  -s --ui=none --no-questions --accept-license


nvidia-smi


## Install to   libGLU.so    libX11.so    libXi.so    libXmu.so

yum -y install  libXi-devel mesa-libGLU-devel libXmu-devel libX11-devel freeglut-devel  \
libXm*   openmotif*    >>  dasan_log_install_NvidiaCUDA_Library.txt

tail dasan_log_install_NvidiaCUDA_Library.txt

yum -y install  mlocate
updatedb


locate libGLU.so
ll /usr/lib64/libGLU.so.1
ln -s /usr/lib64/libGLU.so.1 /usr/lib/libGLU.so
ln -s /usr/lib64/libGLU.so.1 /usr/lib64/libGLU.so

locate libX11.so
ll /usr/lib64/libX11.so.6
ln -s /usr/lib64/libX11.so.6 /usr/lib/libX11.so
ln -s /usr/lib64/libX11.so.6 /usr/lib64/libX11.so

locate libXi.so
ll /usr/lib64/libXi.so.6
ln -s /usr/lib64/libXi.so.6 /usr/lib/libXi.so

locate libXmu.so
ll /usr/lib64/libXmu.so.6
ln -s /usr/lib64/libXmu.so.6 /usr/lib/libXmu.so

locate libGL.so
ll  /usr/lib64/libGL.so

ln -sf     /usr/lib64/libGL.so.1.0.0     /usr/lib64/libGL.so
ll  /usr/lib64/libGL.so



##  Cuda  install  ##
## 2017-08-21 Link
wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux-run

chmod  700  cuda_8.0.61_375.26_linux-run

./cuda_8.0.61_375.26_linux-run    --silent  --toolkit  --samples  # --samplespath=/data/NVIDIA_CUDA-8.0_Samples

echo  "export  PATH=/usr/local/cuda-8.0/bin/:$PATH"   >> /etc/profile
echo  "export LD_LIBRARY_PATH=/usr/local/cuda-8.0/include/:/usr/local/cuda-8.0/lib64/:$LD_LIBRARY_PATH"  >> /etc/profile



echo "export  LD_LIBRARY_PATH=/usr/local/cuda-8.0/extras/CUPTI/lib64/:/usr/local/cuda-8.0/extras/CUPTI/include/:/usr/local/cuda-8.0/extras/CUPTI/:$LD_LIBRARY_PATH"  >> /etc/profile


source /etc/profile

nvcc -V


# ================


cd  NVIDIA_CUDA-8.0_Samples/

make   >>  dasan_log_NVIDIA_Sample_MAKE.txt
tail  dasan_log_NVIDIA_Sample_MAKE.txt


cd

./NVIDIA_CUDA-8.0_Samples/bin/x86_64/linux/release/deviceQuery

./NVIDIA_CUDA-8.0_Samples/bin/x86_64/linux/release/nbody --help
./NVIDIA_CUDA-8.0_Samples/bin/x86_64/linux/release/nbody -benchmark  -numdevices=4



#
# Cudnn install ##
# https://developer.nvidia.com/rdp/cudnn-download
# 위 사이트에서 다운로드 (로그인 필요)
# 버젼 7 과 6 을 둘다 다운 받습니다.


cd ~

mount 192.168.0.5:file /mnt
cp   -r   /mnt/cudnn    .
umount /mnt

cd cudnn
pwd
ll

# 5,6,7 버젼 순서로 압축 해제 합니다.
tar xvzf cudnn-8.0-linux-x64-v5.0.tgz
tar xvzf cudnn-8.0-linux-x64-v6.0.tgz
tar xvzf cudnn-8.0-linux-x64-v7.0.tgz

ls -l cuda/include/
ls -l cuda/lib64/

chmod  a+r  cuda/include/*
chmod a+r  cuda/lib64/*


cp  -rp  cuda/include/cudnn.h  /usr/local/cuda-8.0/include/
cp  -rp  cuda/lib64/libcudnn*  /usr/local/cuda-8.0/lib64/
ls -l /usr/local/cuda-8.0/lib64/libcudnn*

cd ~




#
# 51. Ubuntu NVIDIA Driver & CUDA, cuDNN lib  Install
#
# 51-1. nvidia driver install
#

systemctl stop lightdm

apt-get  -y install gcc make

wget http://us.download.nvidia.com/XFree86/Linux-x86_64/384.59/NVIDIA-Linux-x86_64-384.59.run

chmod +x ./NVIDIA-Linux-x86_64-384.59.run

./NVIDIA-Linux-x86_64-384.59.run  -s --ui=none --no-questions --accept-license

nvidia-smi -L

nvidia-smi

#
# 51-2. cuda8 install
#

EC2='
### ADD Cuda PATH
export PATH=/usr/local/cuda-8.0/bin:/usr/local/cuda-8.0/include:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda-8.0/lib64:/usr/local/cuda/extras/CUPTI/:$LD_LIBRARY_PATH
export CUDA_HOME=/usr/local/cuda-8.0
export CUDA_INC_DIR=/usr/local/cuda-8.0/include
### add end.
'


echo "${EC2}"
echo "${EC2}" >> /etc/profile

tail  /etc/profile
source /etc/profile
source .bashrc

apt-get  -y install  libglu1-mesa  libxi-dev  libxmu-dev  libglu1-mesa-dev  libgl1-mesa-glx  libgles2-mesa-dev  freeglut3-dev  build-essential  libx11-dev  libxmu-dev   >    dasan_log_install_cuda_library.txt

# libglfw3-dev  #20171226 apt-get error로 제외하였습니다.
# ======================

apt-get  -y install locate
updatedb

locate libGLU.so
ln -s /usr/lib/x86_64-linux-gnu/libGLU.so /usr/lib/libGLU.so
ll /usr/lib/libGLU.so

locate libX11.so
ln -s /usr/lib/x86_64-linux-gnu/libX11.so /usr/lib/libX11.so
ll  /usr/lib/libX11.so

locate libXi.so
ln -s /usr/lib/x86_64-linux-gnu/libXi.so /usr/lib/libXi.so
ll /usr/lib/libXi.so

locate libXmu.so
ln -s /usr/lib/x86_64-linux-gnu/libXmu.so /usr/lib/libXmu.so
ll /usr/lib/libXmu.so

locate libGL.so
ln -s /usr/lib/x86_64-linux-gnu/libGL.so /usr/lib/libGL.so
ll /usr/lib/libGL.so

# 20171226 : 깨지는 링크가 없습니다.

# 심볼릭 링크가 잘 연결 되어 있는지 확인.
# 깨지는 링크가 있으면, 수정 해 주어야 합니다.

# ll /usr/lib/x86_64-linux-gnu/libGL.*
# ll /usr/lib/libGL.so
# ll /usr/lib/x86_64-linux-gnu/libGL.so
# ll /usr/lib/x86_64-linux-gnu/mesa/*

# rm /usr/lib/x86_64-linux-gnu/mesa/libGL.so
# ln -s /usr/lib/x86_64-linux-gnu/libGL.so.1.0.0   /usr/lib/x86_64-linux-gnu/mesa/libGL.so

# ll /usr/lib/libGL.so






wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux-run
chmod +x ./cuda_8.0.61_375.26_linux-run

./cuda_8.0.61_375.26_linux-run   --silent  --toolkit  --samples

nvcc -V

#
# 51-3. sample make test
# 샘플이 설치된 폴더로 이동 후 make 실행
# 컴파일이 끝까지 완료 되는지 확인 합니다. (꼭!!)
#


cd NVIDIA_CUDA-8.0_Samples

make   >   dasan_log_cuda_sample_make.txt

tail  -5  dasan_log_cuda_sample_make.txt


Finished building CUDA samples


# run devicequery & test nbody

cd ~

./NVIDIA_CUDA-8.0_Samples/bin/x86_64/linux/release/deviceQuery


./NVIDIA_CUDA-8.0_Samples/bin/x86_64/linux/release/nbody -benchmark




#
# 51-4.  Cudnn   install ##
# https://developer.nvidia.com/rdp/cudnn-download
# 위 사이트에서 다운로드 (로그인 필요)
# 버젼 7 과 6 을 둘다 다운 받습니다.
#

cd ~

mount 192.168.0.5:file /mnt
cp   -r   /mnt/cudnn    .
umount /mnt

cd cudnn
pwd
ll

# 5,6,7 버젼 순서로 압축 해제 합니다.
tar xvzf cudnn-8.0-linux-x64-v5.0.tgz
tar xvzf cudnn-8.0-linux-x64-v6.0.tgz
tar xvzf cudnn-8.0-linux-x64-v7.0.tgz

ls -l cuda/include/
ls -l cuda/lib64/

chmod  a+r  cuda/include/*
chmod a+r  cuda/lib64/*


cp  -rp  cuda/include/cudnn.h  /usr/local/cuda-8.0/include/
cp  -rp  cuda/lib64/libcudnn*  /usr/local/cuda-8.0/lib64/
ls -l /usr/local/cuda-8.0/lib64/libcudnn*

cd ~



#
# 53. Deep Learning Package Install (python-PIP, tensorflow)
#


#
## Centos 7 - python install ##
#


cd ~

which  python
rpm -qa  |  grep ^python-2.7
python -V

rpm -ql  python-2.7.5

easy_install pip
rpm -qa | grep  setuptools

pip -V



yum -y install  python34  python34-devel  >> dasan_log_install_python34.txt
tail dasan_log_install_python34.txt


yum search  all  python34-setuptools

yum -y install  python34-setuptools   >>  dasan_log_install_python34-setuptools.txt
tail  dasan_log_install_python34-setuptools.txt


easy_install-3.4   pip


yum -y install   openblas*  >>  dasan_log_install_openblas.txt
tail dasan_log_install_openblas.txt


python -V
pip -V

python3 -V
pip3 -V


#
## Ubuntu 16 ##
#


cd ~


python -V
which  python

python3 -V
which  python3


apt-get -y  install python-pip python3-pip  >> dasan_log_install_pip_pip3.txt


## pip Check ##

pip -V
which pip

pip3   -V
which pip3



##  ADD  package install ##

pip   install --upgrade pip
pip3   install --upgrade pip

# ==================

pip -V
which pip

pip3   -V
which pip3


# pip 와 pip3 버젼 확인 후 pip가 phyhon3 로 바뀌었으면 아래 명령 실행 .
# perl -pi -e 's/python3/python/'   /usr/local/bin/pip
# cat /usr/local/bin/pip


# ==================

pip install  numpy   scipy  nose
pip3 install  numpy   scipy  nose

pip install  --upgrade tensorflow-gpu
pip3 install  --upgrade tensorflow-gpu




##  tensorflow  test  package ##

cd ~
git clone https://github.com/aymericdamien/TensorFlow-Examples.git
ll  TensorFlow-Examples/


python        TensorFlow-Examples/examples/1_Introduction/helloworld.py


python3      TensorFlow-Examples/examples/1_Introduction/helloworld.py


####  @@ 아래는 필요한 경우에만

##  digits  ##
https://github.com/NVIDIA/DIGITS/blob/digits-5.0/docs/UbuntuInstall.md
# 위 사이트 참조
CUDA_REPO_PKG=http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_8.0.61-1_amd64.deb
ML_REPO_PKG=http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1404/x86_64/nvidia-machine-learning-repo-ubuntu1404_4.0-2_amd64.deb
wget "$CUDA_REPO_PKG" -O /tmp/cuda-repo.deb && sudo dpkg -i /tmp/cuda-repo.deb && rm -f /tmp/cuda-repo.deb
wget "$ML_REPO_PKG" -O /tmp/ml-repo.deb && sudo dpkg -i /tmp/ml-repo.deb && rm -f /tmp/ml-repo.deb

apt update
apt install digits
cat /etc/init/digits.conf | grep exec
exec python -m digits -p 34448

ufw allow 34448/tcp
ufw status
34448/tcp                  ALLOW       Anywhere

# 웹브라우져로 접속  --> http://<server-ip>:34448




# ======= 기타 //  선택사항 ============


@@. 부팅시 nvidia device 올리기 / rc.local   (nvidia-smi)


cat /etc/rc.local
#!/bin/bash
# THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES
#
# It is highly advisable to create own systemd services or udev rules
# to run scripts during boot instead of using this file.
#
# In contrast to previous versions due to parallel execution during boot
# this script will NOT be run after all other services.
#
# Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure
# that this script will be executed during boot.

touch /var/lock/subsys/local
sh  /usr/local/bin/nvidia-startup.sh
systemctl  start  slurmd


cat /usr/local/bin/nvidia-startup.sh
#!/bin/bash
/sbin/modprobe nvidia
if [ "$?" -eq 0 ]; then
  # Count the number of NVIDIA controllers found.
  NVDEVS=`lspci | grep -i NVIDIA`
  N3D=`echo "$NVDEVS" | grep "3D controller" | wc -l`
  NVGA=`echo "$NVDEVS" | grep "VGA compatible controller" | wc -l`
  N=`expr $N3D + $NVGA - 1`
  for i in `seq 0 $N`; do
    mknod -m 666 /dev/nvidia$i c 195 $i
  done
  mknod -m 666 /dev/nvidiactl c 195 255
else
	exit 1
fi
/sbin/modprobe nvidia-uvm
if [ "$?" -eq 0 ]; then
  # Find out the major device number used by the nvidia-uvm driver
  D=`grep nvidia-uvm /proc/devices | awk '{print $1}'`
  mknod -m 666 /dev/nvidia-uvm c $D 0
else
	exit 1
fi





@@. 추가예정 - Cluster 병렬 shell & monitoring  (psh ,pdsh ,  ctop , htop )




@@. HPC Job Scheduler

options
rocks cluster
ohpc  cluster

sge
slurm
pbspro
Torque
Add   Module
Add   node
Add  user
Add   pacakge
Add  NFS

@@. GPU Job Scheduler





문서 분리 // 60. Open HPC

⇒>  https://docs.google.com/document/d/1Kt_YQq_P5x70rnYfh8CvlzpKLeo8HiyA7idS9aSJd9o/edit#


문서 분리 (작성 예정..)  // 61. SGE Job Scheduler

==>> https://docs.google.com/document/d/1un6o1Ydk3aN2HRWvV2yUQs9F2mznH2sNQNLg7Ftz9Gc/edit


@@. 구글 크롬 (chrome) 설치

#CentOS7
yum -y install https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm

# 실행
Normal user -> google-chrome &
root -> google-chrome --no-sandbox &

#Ubuntu16
wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
sudo dpkg -i --force-depends   google-chrome-stable_current_amd64.deb
google-chrome &


@@ motd

/// 로그인 후

모델명 / 서비스테그 / 보증기간 만료날짜
os버젼, kernel 버젼, 설치된 패키지 위치, 버젼
uptime / last reboot / who (w) / disk 사용량

http://www.mewbies.com/how_to_customize_your_console_login_message_tutorial.htm



@@ Dell racadm command  예시  입니다..

node  info  확인   (iDrac  racadm command   )

/opt/dell/srvadmin/sbin/racadm -r  192.168.10.121  -u root  -p  calvin   getsysinfo

1.  login  (default 적용)

/opt/dell/srvadmin/sbin/racadm -r  192.168.10.121  -u root  -p  calvin  racadm set iDRAC.Tuning.DefaultCredentialWarning Disabled

 /opt/dell/srvadmin/sbin/racadm -r  192.168.10.122  -u root  -p  calvin  set iDRAC.Tuning.DefaultCredentialWarning Disabled

 /opt/dell/srvadmin/sbin/racadm -r  192.168.10.123  -u root  -p  calvin  set iDRAC.Tuning.DefaultCredentialWarning Disabled

 /opt/dell/srvadmin/sbin/racadm -r  192.168.10.124  -u root  -p  calvin  set iDRAC.Tuning.DefaultCredentialWarning Disabled

 /opt/dell/srvadmin/sbin/racadm -r  192.168.10.125  -u root  -p  calvin  set iDRAC.Tuning.DefaultCredentialWarning Disabled

2. system info

  /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121  -u root  -p  calvin   getsysinfo
  /opt/dell/srvadmin/sbin/racadm -r  192.168.10.122  -u root  -p  calvin   getsysinfo
  /opt/dell/srvadmin/sbin/racadm -r  192.168.10.123   -u root  -p  calvin   getsysinfo
  /opt/dell/srvadmin/sbin/racadm -r  192.168.10.124   -u root  -p  calvin   getsysinfo
  /opt/dell/srvadmin/sbin/racadm -r  192.168.10.125    -u root  -p  calvin   getsysinfo

3. RAID Controller info

/opt/dell/srvadmin/sbin/racadm -r  192.168.10.121  -u root  -p  calvin  raid get  controllers
/opt/dell/srvadmin/sbin/racadm -r  192.168.10.121  -u root  -p  calvin  raid get  controllers -o
/opt/dell/srvadmin/sbin/racadm -r  192.168.10.121  -u root  -p  calvin  raid get  controllers -o  -p  name,status
/opt/dell/srvadmin/sbin/racadm -r  192.168.10.122  -u root  -p  calvin  raid get  controllers -o  -p  name,status
/opt/dell/srvadmin/sbin/racadm -r  192.168.10.123  -u root  -p  calvin  raid get  controllers -o  -p  name,status
/opt/dell/srvadmin/sbin/racadm -r  192.168.10.124  -u root  -p  calvin  raid get  controllers -o  -p  name,status
/opt/dell/srvadmin/sbin/racadm -r  192.168.10.125  -u root  -p  calvin  raid get  controllers -o  -p  name,status



 4.  master    boot  seq     and    node   pxe   boot

master  >>>

 [root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin   get    bios.BiosBootSettings   |  grep  BootSeq

BootSeq=Optical.SATAEmbedded.J-1,HardDisk.List.1-1,NIC.Embedded.1-1-1
BootSeqRetry=Enabled
UefiBootSeq=
[root@statgpu:/]#


Node  >>>

[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.124  -u root  -p  calvin   get  bios.BiosBootSettings  |  grep   BootSeq

BootSeq=NIC.Embedded.1-1-1,Optical.SATAEmbedded.J-1,HardDisk.List.1-1
BootSeqRetry=Enabled
UefiBootSeq=
[root@statgpu:/]#



4. bios   setting

[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin  set      bios.SysProfileSettings.SysProfile Custom

[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin   set   bios.SysProfileSettings.MonitorMwait  Disabled


[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin   set   bios.SysProfileSettings.ProcC1E   Disabled

[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin   set   bios.SysProfileSettings.ProcCStates     Disabled

5. HT  enable/disable

[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.124  -u root  -p  calvin   get  bios.ProcSettings  |   grep  Logical
LogicalProc=Enabled
[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.122  -u root  -p  calvin   get  bios.ProcSettings  |   grep  Logical
LogicalProc=Enabled
[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.123  -u root  -p  calvin   get  bios.ProcSettings  |   grep  Logical
LogicalProc=Enabled
[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.124  -u root  -p  calvin   get  bios.ProcSettings  |   grep  Logical
LogicalProc=Enabled
[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.125   -u root  -p  calvin   get  bios.ProcSettings  |   grep  Logical
LogicalProc=Enabled
[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin   get  bios.ProcSettings  |   grep  Logical
LogicalProc=Enabled
[root@statgpu:/]#


공통   적용하여야 합니다.     REBOOT     ….   Master   and   Node

1. Matser

[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin   jobqueue create BIOS.Setup.1-1

[root@statgpu:/]# /opt/dell/srvadmin/sbin/racadm -r  192.168.10.121   -u root  -p  calvin   serveraction powercycle



@@ Rsync Backup + E-mail Log


mkdir -p /data/backup/daily
mkdir /data/backup/weekly
mkdir /data/backup/monthly

apt install tree
yum install tree

tree -L 2 /data/backup
/data
├── backup
│   ├── daily
│   ├── monthly
│   └── weekly
└── lost+found

5 directories, 0 files

du -h --max-depth=2 /data/backup
4.0K	/data/backup/weekly
4.0K	/data/backup/monthly
4.0K	/data/backup/daily
16K	/data/backup
16K	/data/lost+found
36K	/data




vi /usr/local/bin/rsync_daily_backup.sh

cat /usr/local/bin/rsync_daily_backup.sh

#/usr/local/bin/rsync_backup.sh


# $ADMIN_LOG_EMAIL & DELL_SERVICE_TAG & DASAN_CUSTOMER  -->>  /etc/profile


# Modify Information.
CUSTOMER="NAME"

# Extraction Service Tag for Dell PowerEdge Server
DELL_SERVICE_TAG=$(dmidecode --type system  | grep 'Serial Number:' | cut -d ' ' -f 3)

### Email Log
LOGALL='/tmp/rsync_backup.log.all'
LOG='/tmp/rsync_backup.log'

### For Daily Set
TITLE='Rsync_Daily_Backup_Log_by_'$(hostname)'-'$DELL_SERVICE_TAG'-'$CUSTOMER
TARGET='/data/backup/daily'
SOURCE_1='/boot'
rsync -avzh --delete $SOURCE_1 $TARGET >> $LOGALL
SOURCE_2='/etc'
rsync -avzh --delete $SOURCE_2 $TARGET >> $LOGALL

### For Weekly Set
#TITLE=Rsync_Weekly_Backup_Log_by_$(hostname)-$DELL_SERVICE_TAG-$CUSTOMER
#TARGET='/data/backup/weekly'
#SOURCE_1='/data/backup/daily'
#rsync -avzh --delete $SOURCE_1 $TARGET > $LOGALL

### For Monthly Set
#TITLE=Rsync_Monthly_Backup_Log_by_$(hostname)-$DELL_SERVICE_TAG-$CUSTOMER
#TARGET='/data/backup/monthly'
#SOURCE_1='/data/backup/daily'
#tar -cvjf /data/backup/monthly/monthly_$(date +%Y%m%d).tar.bz2 $SOURCE_1 > $LOGALL

echo  "############\n $TITLE \n $(date)\n \n
### tree /data/backup ######\n $(tree -L 2 /data/backup) \n
### du /data/backup ########\n $(du -h --max-depth=2 /data/backup) \n
### df -hT ###########\n $(df -h | grep -v tmpfs) \n
### log head 50 ############\n $(head -50 $LOGALL) \n
### log tail 50 ############\n $(tail -50 $LOGALL) \n
#####################\n end." >> $LOG


# For CentOS7
cat $LOG | /usr/bin/mail -s $TITLE $ADMIN_LOG_EMAIL

# For Ubuntu
#/usr/bin/mail -s $TITLE -t $ADMIN_LOG_EMAIL  <  $LOG

rm $LOGALL
rm $LOG



cp /usr/local/bin/rsync_daily_backup.sh /usr/local/bin/rsync_weekly_backup.sh
cp /usr/local/bin/rsync_daily_backup.sh /usr/local/bin/rsync_monthly_backup.sh


chmod +x /usr/local/bin/rsync_*


 ls -al /usr/local/bin/rsync_*
-rwxr-xr-x 1 root root 639 May 11 16:23 /usr/local/bin/rsync_daily_backup.sh*
-rwxr-xr-x 1 root root 693 May 11 16:23 /usr/local/bin/rsync_monthly_backup.sh*
-rwxr-xr-x 1 root root 656 May 11 16:23 /usr/local/bin/rsync_weekly_backup.sh*


 ln -s   /usr/local/bin/rsync_daily_backup.sh   ./rsync_daily_backup.sh
 ln -s   /usr/local/bin/rsync_weeklu_backup.sh   ./rsync_weekly_backup.sh
 ln -s   /usr/local/bin/rsync_monthly_backup.sh   ./rsync_monthly_backup.sh




## 각 파일의 차이점 비교 / vi로 수정해야 합니다.
diff3 ./rsync_daily_backup.sh  ./rsync_weekly_backup.sh ./rsync_monthly_backup.sh


====1
1:17,22c
  TITLE=Rsync_Daily_Backup_Log_by_$(hostname)-$TAG2-$CUSTOMER
  TARGET='/data/backup/daily'
  SOURCE_1='/boot'
  rsync -avzh --delete $SOURCE_1 $TARGET > $LOGALL
  SOURCE_2='/etc'
  rsync -avzh --delete $SOURCE_2 $TARGET > $LOGALL
2:17,22c
3:17,22c
  #TITLE=Rsync_Daily_Backup_Log_by_$(hostname)-$TAG2-$CUSTOMER
  #TARGET='/data/backup/daily'
  #SOURCE_1='/boot'
  #rsync -avzh --delete $SOURCE_1 $TARGET > $LOGALL
  #SOURCE_2='/etc'
  #rsync -avzh --delete $SOURCE_2 $TARGET > $LOGALL
====2
1:25,28c
3:25,28c
  #TITLE=Rsync_Weekly_Backup_Log_by_$(hostname)-$TAG2-$CUSTOMER
  #TARGET='/data/backup/weekly'
  #SOURCE_1='/data/backup/daily'
  #rsync -avzh --delete $SOURCE_1 $TARGET > $LOGALL
2:25,28c
  TITLE=Rsync_Weekly_Backup_Log_by_$(hostname)-$TAG2-$CUSTOMER
  TARGET='/data/backup/weekly'
  SOURCE_1='/data/backup/daily'
  rsync -avzh --delete $SOURCE_1 $TARGET > $LOGALL
====3
1:31,34c
2:31,34c
  #TITLE=Rsync_Monthly_Backup_Log_by_$(hostname)-$TAG2-$CUSTOMER
  #TARGET='/data/backup/monthly'
  #SOURCE_1='/data/backup/daily'
  #tar -cvjf /data/backup/monthly/monthly_$(date +%Y%m%d).tar.bz2 $SOURCE_1 > $LOGALL
3:31,34c
  TITLE=Rsync_Monthly_Backup_Log_by_$(hostname)-$TAG2-$CUSTOMER
  TARGET='/data/backup/monthly'
  SOURCE_1='/data/backup/daily'
  tar -cvjf /data/backup/monthly/monthly_$(date +%Y%m%d).tar.bz2 $SOURCE_1 > $LOGALL




vi /etc/crontab
# /etc/crontab: system-wide crontab
# Unlike any other crontab you don't have to run the `crontab'
# command to install the new version when you edit this file
# and files in /etc/cron.d. These files also have username fields,
# that none of the other crontabs do.

SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# m h dom mon dow user	command
17 *	* * *	root    cd / && run-parts --report /etc/cron.hourly
25 6	* * *	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.daily )
47 6	* * 7	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.weekly )
52 6	1 * *	root	test -x /usr/sbin/anacron || ( cd / && run-parts --report /etc/cron.monthly )
#

### 매일 새벽 2시에 daily backup 실행
00 02   * * *   root    /usr/local/bin/rsync_daily_backup.sh

### 매주 토요일 새벽 4시에 weekly backup 실행
00 04   * * 6   root    /usr/local/bin/rsync_weekly_backup.sh

### 매월 1일 새벽 6시에 monthly backup 실행
00 06   1 * *   root    /usr/local/bin/rsync_monthly_backup.sh




@@ ipmi tools - Change LCD Message /
Send mail - Temperature log

참조 사이트
http://coffeenix.net/board_print.php?bd_code=1765
http://blog.syszone.co.kr/2725?category=18
https://kldp.org/node/120470


=================================


#하드웨어에 ipmi 있는지 확인
dmidecode | grep -A10 IPMI

#CentOS 7.x & Ubuntu 16
yum -y install ipmitool
apt-get  -y  install ipmitool


lsmod | grep ipmi
ipmitool lan print

#LCD Message Set
ipmitool delloem lcd set mode userdefined dasandata.co.kr

ipmitool sdr type Temperature


=================================


vi /root/dasan_export_global_variable.sh
#Copyright by Dasandata.co.ltd
#http://www.dasandata.co.kr

ADMIN_LOG_EMAIL='logdasandata@googlegroups.com'
DASAN_CUSTOMER="DASANDATA"
DELL_SERVER_MODEL=$(dmidecode --type system | grep 'Product Name:' | cut -d ' ' -f 4)
DELL_SERVICE_TAG=$(dmidecode --type system  | grep 'Serial Number:' | cut -d ' ' -f 3)
TITLE_TAIL=$(hostname)'-'$DASAN_CUSTOMER'-'$DELL_SERVER_MODEL'-'$DELL_SERVICE_TAG

#CentOS 7.x
vi /root/dasan_temperature_check_to_log.sh
#Copyright by Dasandata.co.ltd
#http://www.dasandata.co.kr
#CentOS 7.x

#Temperature Detect
AA=$(ipmitool sdr type Temperature)
BB=$(echo $AA | cut -d "|" -f 5 | cut -d " " -f 2)

#Log Message
LOG='/var/log/Temperature_dasandata.log'

echo $(date '+%Y-%m-%d %a %H:%M:%S')' Ambient Temp is ' $BB  >> $LOG


vi /root/dasan_temperature_log_to_mail.sh
#Copyright by Dasandata.co.ltd
#http://www.dasandata.co.kr
#CentOS 7.x

#export_global_variable
source /root/dasan_export_global_variable.sh

TITLE='IPMI_Temperature_log_by_'$TITLE_TAIL

#Log Message
LOG='/var/log/Temperature_dasandata.log'

cat $LOG | /usr/bin/mail -s $TITLE $ADMIN_LOG_EMAIL
rm $LOG

echo  "
##################################################
# This Message from $TITLE_TAIL
# Using crontab (/etc/crontab)
# The location of the configuration file is below.
# /root/data_export_global_variable.sh
# /root/dasan_temperature_check_to_log.sh
# /root/dasan_temperature_log_to_mail.sh
################################################## " >> $LOG


=================================


## Ubuntu 16.04
/root/dasan_temperature_check_to_log.sh
#Copyright by Dasandata.co.ltd
#http://www.dasandata.co.kr
#Ubuntu 16.04

#Temperature Detect
AA=$(ipmitool sdr type Temperature)
BB=$(echo $AA | cut -d "|" -f 5 | cut -d " " -f 2)

#Log Message
LOG='/var/log/Temperature_dasandata.log'

echo $(date '+%Y-%m-%d %a %H:%M:%S')' Inlet Temp is ' $BB  >> $LOG

/root/dasan_temperature_log_to_mail.sh
#Copyright by Dasandata.co.ltd
#http://www.dasandata.co.kr
#Ubuntu 16.x, 17.x

#export_global_variable
source /root/export_global_variable.sh
TITLE='IPMI_Temperature_log_by_'$TITLE_TAIL

#Log Message
LOG='/var/log/Temperature_dasandata.log'


# for ubuntu 16.x
mail -s $TITLE -t $ADMIN_LOG_EMAIL < $LOG

# for ubuntu 17.x
# cat $LOG | /usr/bin/mail -s $TITLE $ADMIN_LOG_EMAIL

rm $LOG


echo  "
##################################################
# This Message from $TITLE_TAIL
# Using crontab (/etc/crontab)
# The location of the configuration file is below.
# /root/dasan_export_global_variable.sh
# /root/dasan_temperature_check_to_log.sh
# /root/dasan_temperature_log_to_mail.sh
################################################## \n" >> $LOG



vi /etc/crontab
# Example of job definition:
# .---------------- minute (0 - 59)
# |  .------------- hour (0 - 23)
# |  |  .---------- day of month (1 - 31)
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name  command to be executed


# add by dasandata
#매시 30분에 온도체크 로그생성
30 * * * * root /root/dasan_temperature_check_to_log.sh

#매일 오전 7시에 온도체크 로그 발송 (발송후 로그 삭제)
30  7 * * * root /root/dasan_temperature_log_to_mail.sh

# end - dasandata


# 파일 실행권한 (필수!)
chmod 744 /root/dasan_temperature_check_to_log.sh
chmod 744 /root/dasan_temperature_log_to_mail.sh


@@ ipmi - Temperature alert, shutdown

vi dasan_temperature_alert_shutdown.sh
===============================
#Copyright by Dasandata.co.ltd
#http://www.dasandata.co.kr
#CentOS 7.x

#import dasan_export_global_variable.sh
source /root/dasan_export_global_variable.sh

TITLE='IPMI_Temperature_Email_Alert_by_'$TITLE_TAIL

#Temperature Detect
AA=$(ipmitool sdr type Temperature)
BB=$(echo $AA | cut -d "|" -f 21 | cut -d " " -f 2)

#Define Temperature
HIGHTEMP=40
MEDTEMP=35

#Log Message
LOG='/tmp/Temperature_alert.log'

#Send Email and Shutdown

if [ $BB -gt $HIGHTEMP ]
	then	echo 'Warning!!' > $LOG
                echo $TITLE_TAIL >> $LOG
                echo 'Ambient Temp is' $BB     >> $LOG
	   echo 'Shutdown now...' >> $LOG
                cat $LOG | /usr/bin/mail -s $TITLE $ADMIN_LOG_EMAIL
                /usr/sbin/shutdown -h -t 10
                rm $LOG

elif [ $BB -gt $MEDTEMP ]
	then	echo 'Caution!!'  > $LOG
		echo $TITLE_TAIL >> $LOG
		echo 'Ambient Temp is' $BB     >> $LOG
		cat $LOG | /usr/bin/mail -s $TITLE $ADMIN_LOG_EMAIL
		rm $LOG

	else	echo " Low "

fi
===========================

@@ Ramdisk + nfs share. (pxe , 클론질라를 통한 네트워크 배포시)

mkdir /memdisk
mkdir /exportdisk
mount -t tmpfs -o size=100g tmpfs /memdisk
mount --bind /memdisk /exportdisk

# nfs share /exportdisk

@@ iDRAC (IPMI) / Serial (COM2) - Redirect.




GRUB_CMDLINE_LINUX="console=tty0 console=ttyS0,57600"
GRUB_TERMINAL="console serial"
GRUB_SERIAL_COMMAND="serial -unit=1 -speed=19200 terminal -timeout=8 console serial"

http://www.advancedclustering.com/act_kb/remote-management-how-to-enable-a-serial-console/
https://www.slac.stanford.edu/grp/cd/soft/unix/EnableSerialConsoleAccessViaSSH.htm
https://www.slac.stanford.edu/grp/cd/soft/unix/EnableConsoleAccessViaSsh.htm
https://www.cyberciti.biz/faq/linux-serial-console-howto/
https://www.hiroom2.com/2016/06/06/ubuntu-16-04-grub2-and-linux-with-serial-console/


@@ tmux

http://www.haruair.com/blog/2124



제외 // @@. 한글 폰트 설치
# 콘솔에서 한글을 표시하는 방법은 없음.
#CentOS7
http://hasunjjang.blogspot.kr/2015/04/centos-2013.html
http://www.freethink.co.kr/?p=204

yum install fonts-korean
localectl list-locales | grep KR
localectl set-locale LANG=ko_KR.utf8

yum install convmv
convmv -f euc-kr -t ko_KR.UTF-8 --notest *
fc-cache

#Ubuntu16
http://blog.daum.net/bagjunggyu/225


@@ Dell Poweredge R740 / PERC H740, H840 / LSI RaidController Driver for Ubuntu 16.04

http://i.dell.com/sites/doccontent/shared-content/data-sheets/en/Documents/Dell-PowerEdge-RAID-Controller-H740P.pdf

SAS controller LSISAS 3508 Dual Core ARM A15 Processor - ROC (RAID-On-Chip)

MEGARAID 9460-8I

I/O Processor / SAS Controller	SAS3508 dual-core RAID-on-Chip (ROC)

https://www.broadcom.com/products/storage/raid-controllers/megaraid-9460-8i#downloads


wget https://docs.broadcom.com/docs-and-downloads/raid-controllers/raid-controllers-common-files/MR_LINUX_DRIVER_7.2-07.702.06.00-1.tgz

압축해제

cd MR_LINUX_DRIVER_7.3-07.703.05.00/dkms-rpms-1/

apt-get -y install alien
alien --scripts *.rpm

dpkg -i dkms_2.2.0.3-2_all.deb
dpkg -i megaraid-sas_07.703.05.00-2_all.deb

reboot

lsmod | grep mega
modinfo megaraid_sas

lsblk
udevadm info /dev/sda




========  end.
